{"ast":null,"code":"import _slicedToArray from\"/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link,useHistory,useLocation}from'react-router-dom';import{Form,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../Message';import Loader from'../Loader';import FormContainer from'../FormContainer';import{register}from'../../actions/userAction';var RgisterScreen=function RgisterScreen(){//Router Hooks\nvar _useLocation=useLocation(),search=_useLocation.search;var _useHistory=useHistory(),push=_useHistory.push;//State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;var redirect=search?search.split('=')[1]:'/';useEffect(function(){if(userInfo){push(redirect);}},[push,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();if(password===confirmPassword){dispatch(register(name,email,password));}else{setMessage('Password do not match');}};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Sign Up\"),message&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},message),error&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},error),loading&&/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"name\",placeholder:\"Enter name\",autoComplete:\"name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",autoComplete:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"password\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Enter password\",autoComplete:\"current-password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"confirmPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Confirm password\",autoComplete:\"current-password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Register\")));};export default RgisterScreen;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/components/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","register","RgisterScreen","search","push","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","split","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { register } from '../../actions/userAction'\n\nconst RgisterScreen = () => {\n\t//Router Hooks\n\tconst { search } = useLocation()\n\tconst { push } = useHistory()\n\t//State\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\n\tconst userRegister = useSelector((state) => state.userRegister)\n\tconst { loading, error, userInfo } = userRegister\n\n\tconst redirect = search ? search.split('=')[1] : '/'\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tpush(redirect)\n\t\t}\n\t}, [push, userInfo, redirect])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tif (password === confirmPassword) {\n\t\t\tdispatch(register(name, email, password))\n\t\t} else {\n\t\t\tsetMessage('Password do not match')\n\t\t}\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tRegister\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default RgisterScreen\n"]},"metadata":{},"sourceType":"module"}