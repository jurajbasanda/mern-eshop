{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst loginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: loginFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userUpdateReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userUpdate","userList","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","loginFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA2B,yBAA3B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,EAA6FC,eAA7F,EAA6GC,iBAA7G,QAAsI,yBAAtI;AACA,SAAQC,kBAAR,EAA2BC,mBAA3B,EAA+CC,mBAA/C,EAAmEC,kBAAnE,EAAsFC,gBAAtF,EAAuGC,eAAvG,QAA6H,0BAA7H;AACA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC/BoB,EAAAA,WAAW,EAAEhB,kBADkB;AAE/BiB,EAAAA,cAAc,EAAEhB,qBAFe;AAG/BiB,EAAAA,IAAI,EAAEhB,WAHyB;AAI/BiB,EAAAA,SAAS,EAAEhB,gBAJoB;AAK/BiB,EAAAA,YAAY,EAAEhB,mBALiB;AAM/BiB,EAAAA,WAAW,EAAEhB,kBANkB;AAO/BiB,EAAAA,iBAAiB,EAAEhB,wBAPY;AAQ/BiB,EAAAA,UAAU,EAAEf,iBARmB;AAS/BgB,EAAAA,QAAQ,EAAEjB,eATqB;AAU/BkB,EAAAA,WAAW,EAAEhB,kBAVkB;AAW/BiB,EAAAA,YAAY,EAAEf,mBAXiB;AAY/BgB,EAAAA,QAAQ,EAAEb,eAZqB;AAa/Bc,EAAAA,YAAY,EAAElB,mBAbiB;AAc/BmB,EAAAA,WAAW,EAAEjB,kBAdkB;AAe/BkB,EAAAA,SAAS,EAAEjB;AAfoB,CAAD,CAA/B;AAmBA,MAAMkB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AACA,MAAMG,gBAAgB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA3G;AACA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAEA,MAAMK,YAAY,GAAG;AACpBpB,EAAAA,IAAI,EAAE;AAAEqB,IAAAA,SAAS,EAAER,oBAAb;AACLS,IAAAA,eAAe,EAAEH;AADZ,GADc;AAGpBlB,EAAAA,SAAS,EAAE;AAAEsB,IAAAA,QAAQ,EAAEL;AAAZ;AAHS,CAArB;AAOA,MAAMM,UAAU,GAAG,CAAC5C,KAAD,CAAnB;AACA,MAAM6C,KAAK,GAAGhD,WAAW,CAACoB,OAAD,EAAUuB,YAAV,EAAwBvC,mBAAmB,CAACF,eAAe,CAAC,GAAG6C,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer} from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer,userListReducer,userUpdateReducer } from './reducers/userReducers'\nimport {orderCreateReducer,orderDeliverReducer,orderDetailsReducer,orderListMyReducer,orderListReducer,orderPayReducer} from './reducers/orderReducers'\nconst reducer = combineReducers({\n\tproductList: productListReducer,\n\tproductDetails: productDetailsReducer,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\tuserDetails: userDetailsReducer,\n\tuserUpdateProfile: userUpdateProfileReducer,\n\tuserUpdate: userUpdateReducer,\n\tuserList: userListReducer,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderDeliver: orderDeliverReducer,\n\torderListMy: orderListMyReducer,\n\torderList: orderListReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst loginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n\tcart: { cartItems: cartItemsFromStorage,\n\t\tshippingAddress: shippingAddressFromStorage },\n\tuserLogin: { userInfo: loginFromStorage },\n\t\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}