{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/components/screens/ShippingScreen.js\";\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../FormContainer';\n\nconst ShippingScreen = () => {\n  //Router Hooks\n  const {\n    push\n  } = useHistory(); //Satets\n\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postCode, setPostCode] = useState('');\n  const [country, setCountry] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user) {\n      push('/login');\n    } else {\n      if (!user || !user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, push, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    autoComplete: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, \"Adress\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"textarea\",\n    as: \"textarea\",\n    rows: \"3\",\n    required: true,\n    placeholder: \"Enter address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"postcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"Postcode\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    required: true,\n    placeholder: \"Enter postcode\",\n    value: postCode,\n    onChange: e => setPostCode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    required: true,\n    placeholder: \"Enter city\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    required: true,\n    placeholder: \"Enter country\",\n    value: country,\n    onChange: e => setCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    ariant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Continue\")));\n};\n\nexport default ShippingScreen;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/components/screens/ShippingScreen.js"],"names":["React","useState","useHistory","useLocation","Form","Button","useDispatch","useSelector","FormContainer","ShippingScreen","push","name","setName","address","setAddress","city","setCity","postCode","setPostCode","country","setCountry","dispatch","userDetails","state","loading","error","user","useEffect","getUserDetails","setEmail","email","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../FormContainer'\n\nconst ShippingScreen = () => {\n    //Router Hooks\n    const {push} = useHistory()\n    //Satets\n\tconst [name, setName] = useState('')\n\tconst [address, setAddress] = useState('')\n\tconst [city, setCity] = useState('')\n\tconst [postCode, setPostCode] = useState('')\n\tconst [country, setCountry] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n    useEffect(() => {\n        if(!user) {\n          push('/login')\n        } else {\n          if (!user || !user.name) {\n            dispatch(getUserDetails('profile'))\n          } else {\n            setName(user.name)\n            setEmail(user.email)\n          }\n        }\n      }, [dispatch, push, user])\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Shipping</h1>\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='address'>\n\t\t\t\t\t<Form.Label>Adress</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='textarea'\n\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter address'\n\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='postcode'>\n\t\t\t\t\t<Form.Label>Postcode</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter postcode'\n\t\t\t\t\t\tvalue={postCode}\n\t\t\t\t\t\tonChange={(e) => setPostCode(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='city'>\n\t\t\t\t\t<Form.Label>City</Form.Label>\n\t\t\t\t\t<Form.Control type='text' required placeholder='Enter city' value={city} onChange={(e) => setCity(e.target.value)}></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='country'>\n\t\t\t\t\t<Form.Label>Country</Form.Label>\n\t\t\t\t\t<Form.Control type='text' required placeholder='Enter country' value={country} onChange={(e) => setCountry(e.target.value)}></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type='submit' ariant='primary'>\n\t\t\t\t\tContinue\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}