{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/actions/userAction.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n\tUSER_LOGIN_REQUEST,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGIN_FAIL,\n\tUSER_LOGOUT,\n\tUSER_REGISTER_SUCCESS,\n\tUSER_REGISTER_FAIL,\n\tUSER_REGISTER_REQUEST,\n\tUSER_DETAILS_REQUEST,\n\tUSER_DETAILS_SUCCESS,\n\tUSER_DETAILS_FAIL,\n\tUSER_UPDATE_PROFILE_REQUEST,\n\tUSER_UPDATE_PROFILE_SUCCESS,\n\tUSER_UPDATE_PROFILE_FAIL,\n\tUSER_DETAILS_RESET\n} from '../constants/userConstants'\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_REQUEST,\n\t\t})\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t}\n\n\t\tconst { data } = await axios.post('/api/users/login', { email, password }, config)\n\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_FAIL,\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\n\t\t})\n\t}\n}\nexport const logout = () => (dispatch) => {\n\tlocalStorage.removeItem('userInfo')\n\tdispatch({\n\t\ttype: USER_LOGOUT,\n\t})\n\tdispatch({\n\t\ttype: USER_LOGOUT,\n\t})\n\tdispatch({\n\t\ttype: USER_LOGOUT,\n\t})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_REQUEST,\n\t\t})\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t}\n\n\t\tconst { data } = await axios.post('/api/users', {  email, password }, config)\n\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_SUCCESS,\n\n\t\t\tpayload: data,\n\t\t})\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_SUCCESS,\n\n\t\t\tpayload: data,\n\t\t})\n\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_FAIL,\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\n\t\t})\n\t}\n}\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_REQUEST,\n\t\t})\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\t\tconst { data } = await axios.get(`/api/users/${id}`, config)\n\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_FAIL,\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\n\t\t})\n\t}\n}\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n\ttry {\n\t  dispatch({\n\t\ttype: USER_UPDATE_PROFILE_REQUEST,\n\t  })\n  \n\t  const {\n\t\tuserLogin: { userInfo },\n\t  } = getState()\n  \n\t  const config = {\n\t\theaders: {\n\t\t  'Content-Type': 'application/json',\n\t\t  Authorization: `Bearer ${userInfo.token}`,\n\t\t},\n\t  }\n  \n\t  const { data } = await axios.put(`/api/users/profile`, user, config)\n  \n\t  dispatch({\n\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\n\t\tpayload: data,\n\t  })\n\t} catch (error) {\n\t  const message =\n\t\terror.response && error.response.data.message\n\t\t  ? error.response.data.message\n\t\t  : error.message\n\t  if (message === 'Not authorized, token failed') {\n\t\tdispatch(logout())\n\t  }\n\t  dispatch({\n\t\ttype: USER_UPDATE_PROFILE_FAIL,\n\t\tpayload: message,\n\t  })\n\t}\n  }"]},"metadata":{},"sourceType":"module"}