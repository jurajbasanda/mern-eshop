{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productReviewCreateReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst loginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: loginFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productReviewCreateReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userUpdateReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userUpdate","userList","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","loginFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACCC,kBADD,EAECC,qBAFD,EAGCC,0BAHD,EAICC,oBAJD,EAKCC,oBALD,EAMCC,oBAND,EAOCC,sBAPD,QAQO,4BARP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACCC,gBADD,EAECC,mBAFD,EAGCC,kBAHD,EAICC,wBAJD,EAKCC,eALD,EAMCC,iBAND,QAOO,yBAPP;AAQA,SACCC,kBADD,EAECC,mBAFD,EAGCC,mBAHD,EAICC,kBAJD,EAKCC,gBALD,EAMCC,eAND,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC/ByB,EAAAA,WAAW,EAAErB,kBADkB;AAE/BsB,EAAAA,cAAc,EAAErB,qBAFe;AAG/BsB,EAAAA,aAAa,EAAEpB,oBAHgB;AAI/BqB,EAAAA,aAAa,EAAEpB,oBAJgB;AAK/BqB,EAAAA,aAAa,EAAEpB,oBALgB;AAM/BqB,EAAAA,mBAAmB,EAAExB,0BANU;AAO/ByB,EAAAA,eAAe,EAAErB,sBAPc;AAQ/BsB,EAAAA,IAAI,EAAErB,WARyB;AAS/BsB,EAAAA,SAAS,EAAErB,gBAToB;AAU/BsB,EAAAA,YAAY,EAAErB,mBAViB;AAW/BsB,EAAAA,WAAW,EAAErB,kBAXkB;AAY/BsB,EAAAA,iBAAiB,EAAErB,wBAZY;AAa/BsB,EAAAA,UAAU,EAAEpB,iBAbmB;AAc/BqB,EAAAA,QAAQ,EAAEtB,eAdqB;AAe/BuB,EAAAA,WAAW,EAAErB,kBAfkB;AAgB/BsB,EAAAA,YAAY,EAAEpB,mBAhBiB;AAiB/BqB,EAAAA,QAAQ,EAAElB,eAjBqB;AAkB/BmB,EAAAA,YAAY,EAAEvB,mBAlBiB;AAmB/BwB,EAAAA,WAAW,EAAEtB,kBAnBkB;AAoB/BuB,EAAAA,SAAS,EAAEtB;AApBoB,CAAD,CAA/B;AAuBA,MAAMuB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD0B,GAE1B,EAFH;AAGA,MAAMG,gBAAgB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GAEtB,IAFH;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADgC,GAEhC,EAFH;AAIA,MAAMK,YAAY,GAAG;AACpBpB,EAAAA,IAAI,EAAE;AACLqB,IAAAA,SAAS,EAAER,oBADN;AAELS,IAAAA,eAAe,EAAEH;AAFZ,GADc;AAKpBlB,EAAAA,SAAS,EAAE;AAAEsB,IAAAA,QAAQ,EAAEL;AAAZ;AALS,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACtD,KAAD,CAAnB;AACA,MAAMuD,KAAK,GAAG1D,WAAW,CACxByB,OADwB,EAExB4B,YAFwB,EAGxBjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAJ,CAAhB,CAHK,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n\tproductListReducer,\n\tproductDetailsReducer,\n\tproductReviewCreateReducer,\n\tproductDeleteReducer,\n\tproductCreateReducer,\n\tproductUpdateReducer,\n\tproductTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n\tuserLoginReducer,\n\tuserRegisterReducer,\n\tuserDetailsReducer,\n\tuserUpdateProfileReducer,\n\tuserListReducer,\n\tuserUpdateReducer,\n} from './reducers/userReducers'\nimport {\n\torderCreateReducer,\n\torderDeliverReducer,\n\torderDetailsReducer,\n\torderListMyReducer,\n\torderListReducer,\n\torderPayReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n\tproductList: productListReducer,\n\tproductDetails: productDetailsReducer,\n\tproductDelete: productDeleteReducer,\n\tproductCreate: productCreateReducer,\n\tproductUpdate: productUpdateReducer,\n\tproductReviewCreate: productReviewCreateReducer,\n\tproductTopRated: productTopRatedReducer,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\tuserDetails: userDetailsReducer,\n\tuserUpdateProfile: userUpdateProfileReducer,\n\tuserUpdate: userUpdateReducer,\n\tuserList: userListReducer,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderDeliver: orderDeliverReducer,\n\torderListMy: orderListMyReducer,\n\torderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n\t? JSON.parse(localStorage.getItem('cartItems'))\n\t: []\nconst loginFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\n\t: {}\n\nconst initialState = {\n\tcart: {\n\t\tcartItems: cartItemsFromStorage,\n\t\tshippingAddress: shippingAddressFromStorage,\n\t},\n\tuserLogin: { userInfo: loginFromStorage },\n}\n\nconst middleware = [thunk]\nconst store = createStore(\n\treducer,\n\tinitialState,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}