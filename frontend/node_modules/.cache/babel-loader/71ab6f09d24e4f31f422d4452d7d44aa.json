{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst loginFromStorage = localStorage.getItem('userInfo') ? JSON.stringify(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","loginFromStorage","stringify","initialState","cartItems","userInfo","userInfoFromStorage","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACCC,kBADD,EAECC,qBAFD,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC/BS,EAAAA,WAAW,EAAEL,kBADkB;AAE/BM,EAAAA,cAAc,EAAEL,qBAFe;AAG/BM,EAAAA,IAAI,EAAEL,WAHyB;AAI/BM,EAAAA,SAAS,EAAEL;AAJoB,CAAD,CAA/B;AAOA,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD0B,GAE1B,EAFH;AAGA,MAAMG,gBAAgB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACG,SAAL,CAAeL,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf,CADsB,GAEtB,IAFH;AAIA,MAAMK,YAAY,GAAG;AACnBT,EAAAA,IAAI,EAAE;AAAEU,IAAAA,SAAS,EAAER;AAAb,GADa;AAEnBD,EAAAA,SAAS,EAAE;AAAEU,IAAAA,QAAQ,EAAEC;AAAZ;AAFQ,CAArB;AAKA,MAAMC,UAAU,GAAG,CAACtB,KAAD,CAAnB;AACA,MAAMuB,KAAK,GAAG1B,WAAW,CACxBS,OADwB,EAExBY,YAFwB,EAGxBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGuB,UAAJ,CAAhB,CAHK,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n\tproductListReducer,\n\tproductDetailsReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer } from './reducers/userReducers'\nconst reducer = combineReducers({\n\tproductList: productListReducer,\n\tproductDetails: productDetailsReducer,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n\t? JSON.parse(localStorage.getItem('cartItems'))\n\t: []\nconst loginFromStorage = localStorage.getItem('userInfo')\n\t? JSON.stringify(localStorage.getItem('userInfo'))\n\t: null\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\nconst store = createStore(\n\treducer,\n\tinitialState,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}