{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/top`);\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","createProductReview","productId","review","getState","userLogin","userInfo","config","headers","Authorization","token","post","logout","listTopProducts"],"mappings":"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","sourcesContent":["import {\n\tPRODUCT_LIST_FAIL,\n\tPRODUCT_LIST_SUCCESS,\n\tPRODUCT_LIST_REQUEST,\n\tPRODUCT_DETAILS_FAIL,\n\tPRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL\n} from '../constants/productConstants'\nimport axios from 'axios'\n\nexport const listProducts = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_LIST_REQUEST })\n\t\tconst { data } = await axios.get(`/api/products`)\n\t\tdispatch({\n\t\t\ttype: PRODUCT_LIST_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_LIST_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n\t\tconst { data } = await axios.get(`/api/products/${id}`)\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_DETAILS_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_DETAILS_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\nexport const createProductReview = (productId, review) => async (\n\tdispatch,\n\tgetState\n) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_CREATE_REVIEW_REQUEST,\n\t\t})\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\n\t\tawait axios.post(`/api/products/${productId}/reviews`, review, config)\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_CREATE_REVIEW_SUCCESS,\n\t\t})\n\t} catch (error) {\n\t\tconst message =\n\t\t\terror.response && error.response.data.message\n\t\t\t\t? error.response.data.message\n\t\t\t\t: error.message\n\t\tif (message === 'Not authorized, token failed') {\n\t\t\tdispatch(logout())\n\t\t}\n\t\tdispatch({\n\t\t\ttype: PRODUCT_CREATE_REVIEW_FAIL,\n\t\t\tpayload: message,\n\t\t})\n\t}\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_TOP_REQUEST })\n\n\t\tconst { data } = await axios.get(`/api/products/top`)\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_TOP_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_TOP_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}