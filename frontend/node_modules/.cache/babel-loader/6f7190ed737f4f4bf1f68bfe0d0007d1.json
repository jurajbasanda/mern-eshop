{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/components/screens/RegisterScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../Message';\nimport Loader from '../Loader';\nimport FormContainer from '../FormContainer';\nimport { register } from '../../actions/userAction';\n\nconst RgisterScreen = () => {\n  //Router Hooks\n  const {\n    search\n  } = useLocation();\n  const {\n    push\n  } = useHistory(); //State\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    userInfo\n  } = userRegister;\n  const redirect = search ? search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      push(redirect);\n    }\n  }, [push, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password.value === confirmPassword.value) {\n      dispatch(register(name, email, password));\n    } else {\n      setMessage('Password do not match');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, \"Sign Up\"), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }\n  }, message), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }\n  }, message), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"anem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"anem\",\n    placeholder: \"Enter name\",\n    autoComplete: \"name\",\n    value: email,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    autoComplete: \"current-password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"Register\")));\n};\n\nexport default RgisterScreen;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/components/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","register","RgisterScreen","search","push","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","userInfo","redirect","split","submitHandler","e","preventDefault","value","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { register } from '../../actions/userAction'\n\nconst RgisterScreen = () => {\n\t//Router Hooks\n\tconst { search } = useLocation()\n\tconst { push } = useHistory()\n\t//State\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\n\tconst userRegister = useSelector((state) => state.userRegister)\n\tconst { loading, userInfo } = userRegister\n\n\tconst redirect = search ? search.split('=')[1] : '/'\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tpush(redirect)\n\t\t}\n\t}, [push, userInfo, redirect])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n        if(password.value===confirmPassword.value){\n        dispatch(register(name,email,password))\n    }else{\n        setMessage('Password do not match')\n    }\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='anem'>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='anem'\n\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tRegister\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default RgisterScreen\n"]},"metadata":{},"sourceType":"module"}