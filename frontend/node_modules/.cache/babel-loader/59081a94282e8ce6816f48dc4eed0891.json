{"ast":null,"code":"import _slicedToArray from\"/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../FormContainer';import CheckoutSteps from'../CheckoutSteps';import{saveShippingAddress}from'../../actions/cartActions';var ShippingScreen=function ShippingScreen(){//Router Hooks\nvar _useHistory=useHistory(),push=_useHistory.push;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postCode),_useState6=_slicedToArray(_useState5,2),postCode=_useState6[0],setPostCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var user=userDetails.user;if(!user){push('/login');}var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postCode:postCode,country:country}));push('/login?redirect=payment');};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/React.createElement(\"h1\",null,\"Shipping\"),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"address\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Adress\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"textarea\",as:\"textarea\",rows:\"3\",required:true,placeholder:\"Enter address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"postcode\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Postcode\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",required:true,placeholder:\"Enter postcode\",value:postCode,onChange:function onChange(e){return setPostCode(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"city\"},/*#__PURE__*/React.createElement(Form.Label,null,\"City\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",required:true,placeholder:\"Enter city\",value:city,onChange:function onChange(e){return setCity(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"country\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Country\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",required:true,placeholder:\"Enter country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",ariant:\"primary\"},\"Continue\")));};export default ShippingScreen;","map":{"version":3,"sources":["/Users/macbook/Documents/Traversy ProShop Mern tut/propshop/frontend/src/components/screens/ShippingScreen.js"],"names":["React","useState","useHistory","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","push","cart","state","shippingAddress","address","setAddress","city","setCity","postCode","setPostCode","country","setCountry","dispatch","userDetails","user","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../FormContainer'\nimport CheckoutSteps from '../CheckoutSteps'\nimport { saveShippingAddress } from '../../actions/cartActions'\n\nconst ShippingScreen = () => {\n\t//Router Hooks\n\tconst { push } = useHistory()\n\tconst cart = useSelector((state) => state.cart)\n\tconst { shippingAddress } = cart\n\n\tconst [address, setAddress] = useState(shippingAddress.address)\n\tconst [city, setCity] = useState(shippingAddress.city)\n\tconst [postCode, setPostCode] = useState(shippingAddress.postCode)\n\tconst [country, setCountry] = useState(shippingAddress.country)\n\tconst dispatch = useDispatch()\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { user } = userDetails\n\n\tif (!user) {\n\t\tpush('/login')\n\t}\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(saveShippingAddress({ address, city, postCode, country }))\n\t\tpush('/login?redirect=payment')\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<CheckoutSteps step1 step2></CheckoutSteps>\n\t\t\t<h1>Shipping</h1>\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='address'>\n\t\t\t\t\t<Form.Label>Adress</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='textarea'\n\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter address'\n\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='postcode'>\n\t\t\t\t\t<Form.Label>Postcode</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter postcode'\n\t\t\t\t\t\tvalue={postCode}\n\t\t\t\t\t\tonChange={(e) => setPostCode(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='city'>\n\t\t\t\t\t<Form.Label>City</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter city'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='country'>\n\t\t\t\t\t<Form.Label>Country</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter country'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type='submit' ariant='primary'>\n\t\t\t\t\tContinue\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}