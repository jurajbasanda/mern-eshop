{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","actions/userAction.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/screens/HomeScreen.js","actions/productActions.js","components/screens/ProductScreen.js","actions/cartActions.js","components/screens/CartScreen.js","components/FormContainer.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/ProfileScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","NavDropdown","title","name","Item","onClick","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","rating","numReviews","Text","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","props","useEffect","a","axios","get","data","response","message","key","sm","md","lg","xl","ProductScreen","useState","qty","setQty","push","useHistory","useParams","listProductDetails","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","disabled","addToCart","getState","setItem","stringify","CartScreen","location","useLocation","history","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","current","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","autoComplete","RgisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","Authorization","token","put","updateUserProfile","App","path","component","RegisterScreen","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2c7bb474.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\nconst reducer = combineReducers({\n\tproductList: productListReducer,\n\tproductDetails: productDetailsReducer,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\tuserDetails: userDetailsReducer,\n\tuserUpdateProfile: userUpdateProfileReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst loginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n\tcart: { cartItems: cartItemsFromStorage },\n\tuserLogin: { userInfo: loginFromStorage },\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n","import {PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_FAIL} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n      case PRODUCT_LIST_REQUEST:\n        return { loading: true, products: [] }\n      case PRODUCT_LIST_SUCCESS:\n        return {\n          loading: false,\n          products: action.payload,\n          \n        }\n      case PRODUCT_LIST_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n  }\n  export const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n","import { CART_ADD_ITEM,CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nexport const cartReducer = (\n    state = { cartItems: [], shippingAddress: {} },\n    action\n  ) => {\n    switch (action.type) {\n      case CART_ADD_ITEM:\n        const item = action.payload\n  \n        const existItem = state.cartItems.find((x) => x.product === item.product)\n  \n        if (existItem) {\n          return {\n            ...state,\n            cartItems: state.cartItems.map((x) =>\n              x.product === existItem.product ? item : x\n            ),\n          }\n        } else {\n          return {\n            ...state,\n            cartItems: [...state.cartItems, item],\n          }\n        }\n      case CART_REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n        }\n      \n      \n      default:\n        return state\n    }\n  }","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\n","import {\n\tUSER_LOGIN_REQUEST,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGIN_FAIL,\n\tUSER_LOGOUT,\n\tUSER_REGISTER_REQUEST,\n\tUSER_REGISTER_SUCCESS,\n\tUSER_REGISTER_FAIL,\n\tUSER_DETAILS_REQUEST,\n\tUSER_DETAILS_SUCCESS,\n\tUSER_DETAILS_FAIL,\n\tUSER_UPDATE_PROFILE_REQUEST,\n\tUSER_UPDATE_PROFILE_FAIL,\n\tUSER_UPDATE_PROFILE_SUCCESS,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_LOGIN_REQUEST:\n\t\t\treturn { loading: true }\n\t\tcase USER_LOGIN_SUCCESS:\n\t\t\treturn { loading: false, userInfo: action.payload }\n\t\tcase USER_LOGIN_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\t\tcase USER_LOGOUT:\n\t\t\treturn {}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nexport const userRegisterReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_REGISTER_REQUEST:\n\t\t\treturn { loading: true }\n\t\tcase USER_REGISTER_SUCCESS:\n\t\t\treturn { loading: false, userInfo: action.payload }\n\t\tcase USER_REGISTER_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n\tswitch (action.type) {\n\t\tcase USER_DETAILS_REQUEST:\n\t\t\treturn { ...state, loading: true }\n\t\tcase USER_DETAILS_SUCCESS:\n\t\t\treturn { loading: false, user: action.payload }\n\t\tcase USER_DETAILS_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nexport const userUpdateProfileReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_UPDATE_PROFILE_REQUEST:\n\t\t\treturn { loading: true }\n\t\tcase USER_UPDATE_PROFILE_SUCCESS:\n\t\t\treturn { loading: false, success: true, userInfo: action.payload }\n\t\tcase USER_UPDATE_PROFILE_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SECCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n","import axios from 'axios'\nimport {\n\tUSER_LOGIN_REQUEST,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGIN_FAIL,\n\tUSER_LOGOUT,\n\tUSER_REGISTER_SUCCESS,\n\tUSER_REGISTER_FAIL,\n\tUSER_REGISTER_REQUEST,\n\tUSER_DETAILS_REQUEST,\n\tUSER_DETAILS_SUCCESS,\n\tUSER_DETAILS_FAIL,\n\tUSER_UPDATE_PROFILE_REQUEST,\n\tUSER_UPDATE_PROFILE_SUCCESS,\n\tUSER_UPDATE_PROFILE_FAIL\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_REQUEST,\n\t\t})\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t}\n\n\t\tconst { data } = await axios.post('/api/users/login', { email, password }, config)\n\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_FAIL,\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\n\t\t})\n\t}\n}\nexport const logout = () => (dispatch) => {\n\tlocalStorage.removeItem('userInfo')\n\tdispatch({\n\t\ttype: USER_LOGOUT,\n\t})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_REQUEST,\n\t\t})\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t}\n\n\t\tconst { data } = await axios.post('/api/users', { name, email, password }, config)\n\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_SUCCESS,\n\n\t\t\tpayload: data,\n\t\t})\n\t\tdispatch({\n\t\t\ttype: USER_LOGIN_SUCCESS,\n\n\t\t\tpayload: data,\n\t\t})\n\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_REGISTER_FAIL,\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\n\t\t})\n\t}\n}\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_REQUEST,\n\t\t})\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\t\tconst { data } = await axios.get(`/api/users/${id}`, config)\n\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: USER_DETAILS_FAIL,\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\n\t\t})\n\t}\n}\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n\ttry {\n\t  dispatch({\n\t\ttype: USER_UPDATE_PROFILE_REQUEST,\n\t  })\n  \n\t  const {\n\t\tuserLogin: { userInfo },\n\t  } = getState()\n  \n\t  const config = {\n\t\theaders: {\n\t\t  'Content-Type': 'application/json',\n\t\t  Authorization: `Bearer ${userInfo.token}`,\n\t\t},\n\t  }\n  \n\t  const { data } = await axios.put(`/api/users/profile`, user, config)\n  \n\t  dispatch({\n\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\n\t\tpayload: data,\n\t  })\n\t} catch (error) {\n\t  const message =\n\t\terror.response && error.response.data.message\n\t\t  ? error.response.data.message\n\t\t  : error.message\n\t  if (message === 'Not authorized, token failed') {\n\t\tdispatch(logout())\n\t  }\n\t  dispatch({\n\t\ttype: USER_UPDATE_PROFILE_FAIL,\n\t\tpayload: message,\n\t  })\n\t}\n  }","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\n//Style\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../actions/userAction'\n\nconst Header = () => {\n\tconst dispatch = useDispatch()\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { userInfo } = userLogin\n\tconst logoutHnadler = () => {\n\t\tdispatch(logout())\n\t}\n\treturn (\n\t\t<header>\n\t\t\t<Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n\t\t\t\t<Container>\n\t\t\t\t\t<LinkContainer to='/'>\n\t\t\t\t\t\t<Navbar.Brand>DELETE</Navbar.Brand>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\n\t\t\t\t\t\t<Nav className='ml-auto'>\n\t\t\t\t\t\t\t<LinkContainer to='/cart'>\n\t\t\t\t\t\t\t\t<Nav.Link href='/cart'>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-shopping-cart'></i> Cart\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t{userInfo ? (\n\t\t\t\t\t\t\t\t<NavDropdown title={userInfo.name} id='username'>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/profile'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={logoutHnadler}>Log Out</NavDropdown.Item>\n\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LinkContainer to='/login'>\n\t\t\t\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-user'></i> Sign in\n\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React from 'react'\n//Style\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">&copy; Delete by Juraj Basanda</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text,color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i style={{color}}\n          className={\n            value >= 1\n              ? `fas fa-star`\n              : value <= 0.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 2\n              ? `fas fa-star`\n              : value <= 1.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 3\n              ? `fas fa-star`\n              : value <= 2.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 4\n              ? `fas fa-star`\n              : value <= 3.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 5\n              ? `fas fa-star`\n              : value <= 4.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span> {text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n    color:'rgb(241, 210, 40)'\n}\n\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"mu-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Title as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          ></Rating>\n        </Card.Title>\n\n        <Card.Text as=\"h3\">£{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport { listProducts } from '../../actions/productActions'\nimport Product from '../Product'\nimport Message from '../Message'\nimport Loader from '../Loader'\n\nconst HomeScreen = props => {\n\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n  useEffect(() => {\n    dispatch(listProducts())\n\n  }, [dispatch])\n\n\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (<Message variant={error}>{error}</Message>)\n          : (\n            <>\n              <Row>\n                {products.map((product) => (\n                  <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product} />\n                  </Col>\n                ))}\n              </Row>\n            </>\n          )}\n\n    </>\n  )\n}\n\nexport default HomeScreen\n","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST,PRODUCT_DETAILS_FAIL,PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS } from '../constants/productConstants'\nimport axios from 'axios'\n\nexport const listProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get(`/api/products`)\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n          type: PRODUCT_LIST_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        })\n      }\n\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button, Form\n} from 'react-bootstrap'\nimport Rating from '../Rating'\nimport { listProductDetails } from '../../actions/productActions'\nimport Loader from '../Loader'\nimport Message from '../Message'\n\nconst ProductScreen = () => {\n  //Router hooks\n  const [qty, setQty] = useState(1)\n  const { push } = useHistory()\n  const { id } = useParams()\n  //Use redux\n  const dispatch = useDispatch()\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  useEffect(() => {\n    dispatch(listProductDetails(id))\n  }, [id, dispatch]);\n  //Get product and go to Cart\n  const addToCartHandler = () => {\n    push(`/cart/${id}?qty=${qty}`)\n  }\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to={`/`}>\n        Go Back\n      </Link>\n      {loading ? <Loader></Loader> : error ? <Message variant=\"danger\"></Message> : (<Row>\n        <Col md=\"6\">\n          <Image src={product.image} alt={product.name} fluid />\n        </Col>\n        <Col md=\"3\">\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>{product.name}</h2>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                value={product.rating}\n                text={`${product.numReviews} reviews`}\n              ></Rating>\n            </ListGroup.Item>\n            <ListGroup.Item>Price: £ {product.price}</ListGroup.Item>\n            <ListGroup.Item>{product.description}</ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price:</Col>\n                  <Col>\n                    <strong>£ {product.price}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Status:</Col>\n                  <Col>\n                    <strong>{product.countInStock > 0 ? `In Stock` : `Sold Out`}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              {product.countInStock > 0 && (\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Qty</Col>\n                    <Col>\n                      <Form.Control\n                        as='select'\n                        value={qty}\n                        onChange={(e) => setQty(e.target.value)}\n                      >\n                        {[...Array(product.countInStock).keys()].map(\n                          (x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          )\n                        )}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block '\n                      disabled={true ? product.countInStock === 0 : false}>ADD TO CART</Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n       \n      </Row>)}\n\n    </>\n  )\n}\n\nexport default ProductScreen\n","import { CART_ADD_ITEM,CART_REMOVE_ITEM } from '../constants/cartConstants'\nimport axios from 'axios'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n      type: CART_REMOVE_ITEM,\n      payload: id,\n    })\n  \n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n  }","import React, { useEffect } from 'react'\nimport { Link, useHistory, useLocation, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Card, Col, Image, Form, ListGroup, Button } from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../../actions/cartActions'\nimport Message from '../Message'\n\nconst CartScreen = () => {\n  //Router hooks\n  const { id } = useParams()\n  const location = useLocation()\n  const history = useHistory()\n  //Get qty\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n  //Use redux\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (id) {\n      dispatch(addToCart(id, qty))\n    }\n  }, [id, dispatch, qty])\n  //Remove product from cart\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n  //Go to login or shipping\n  const checkoutHandler = () => {\n    history.push(`/login?redirect/shipping`)\n  }\n  return <Row>\n    <Col md={8}>\n      <h1>Shopping Cart</h1>\n      {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go back</Link></Message>\n        : (<ListGroup variant='flush'>\n          {cartItems.map(item => (<ListGroup.Item key={item.product}>\n            <Row>\n              <Col md={2}>\n                <Image src={item.image} alt={item.name} fluid rounded />\n              </Col><Col md={3}>\n                <Link to={`/product/${item.product}`}>{item.name}</Link>\n              </Col>\n              <Col md={2}>£ {item.price}</Col>\n              <Col md={2}>\n                <Form.Control\n                  as='select'\n                  value={item.qty}\n                  onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                >\n                  {[...Array(item.countInStock).keys()].map(\n                    (x) => (\n                      <option key={x + 1} value={x + 1}>\n                        {x + 1}\n                      </option>\n                    )\n                  )}\n                </Form.Control>\n              </Col>\n              <Col md={2}>\n                <Button type=\"button\" variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                  <i className=\"fas fa-trash\"></i>\n                </Button>\n              </Col>\n            </Row>\n          </ListGroup.Item>))}\n        </ListGroup>)}\n    </Col>\n    <Col><Card><ListGroup variant='flush'>\n      <ListGroup.Item>\n        <h2>Subtotal ({cartItems.reduce((acc, current) => acc + current.qty, 0)}) Items</h2>\n                    £ {cartItems.reduce((acc, current) => acc + current.qty * current.price, 0).toFixed(2)}\n      </ListGroup.Item>\n      <ListGroup.Item>\n        <Button type='button' className='btn-block' disabled={true ? cartItems === 0 : false} onClick={checkoutHandler}>\n          Checkout\n                    </Button>\n      </ListGroup.Item>\n    </ListGroup>\n    </Card></Col>\n  </Row>\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Col, Row } from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Row className='justify-content-md-center'>\n\t\t\t\t<Col xs={12} md={6}>\n\t\t\t\t\t{children}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { login } from '../../actions/userAction'\n\nconst LoginScreen = () => {\n\t//Router Hooks\n\tconst { search } = useLocation()\n\tconst { push } = useHistory()\n\t//State\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst dispatch = useDispatch()\n\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { loading, error, userInfo } = userLogin\n\n\tconst redirect = search ? search.split('=')[1] : '/'\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tpush(redirect)\n\t\t}\n\t}, [push, userInfo, redirect])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(login(email, password))\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Sign In</h1>\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tSign In\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t\t<Row className='py-3'>\n\t\t\t\t<Col>\n\t\t\t\t\tNot Registered yet ?{' '}\n\t\t\t\t\t<Link to={redirect ? `/register?redirect=${redirect}` : `/register`} style={{ color: '#284a6c' }}>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Link>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</FormContainer>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { register } from '../../actions/userAction'\n\nconst RgisterScreen = () => {\n\t//Router Hooks\n\tconst { search } = useLocation()\n\tconst { push } = useHistory()\n\t//State\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\n\tconst userRegister = useSelector((state) => state.userRegister)\n\tconst { loading, error, userInfo } = userRegister\n\n\tconst redirect = search ? search.split('=')[1] : '/'\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tpush(redirect)\n\t\t}\n\t}, [push, userInfo, redirect])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tif (password === confirmPassword) {\n\t\t\tdispatch(register(name, email, password))\n\t\t} else {\n\t\t\tsetMessage('Password do not match')\n\t\t}\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tRegister\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default RgisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useHistory} from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport { getUserDetails, updateUserProfile } from '../../actions/userAction'\n\nconst ProfileScreen = ({history}) => {\n\t//Router Hooks\n\tconst {push} = useHistory()\n\t//State\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { loading, error, user } = userDetails\n\tconst userLogin = useSelector((state) => state.userDetails)\n    const { userInfo } = userLogin\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  useEffect(() => {\n    if (!userInfo===0) {\n      push('/login')\n    } else {\n      if (!user || !user.name) {\n        dispatch(getUserDetails('profile'))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, push, userInfo, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\treturn (\n\t\t<Row>\n            <Col md={3}>\n            <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {success && <Message variant='success'>Profile Updated</Message>}\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t\t{loading && <Loader />}\n\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Col>\n\t\t\t<Col md={9}>\n\t\t\t\t<h2>My Orders</h2>\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default ProfileScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n//Components\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './components/screens/HomeScreen'\nimport ProductScreen from './components/screens/ProductScreen'\nimport CartScreen from './components/screens/CartScreen'\nimport LoginScreen from './components/screens/LoginScreen'\nimport RegisterScreen from './components/screens/RegisterScreen'\nimport ProfileScreen from './components/screens/ProfileScreen'\n\n//Style\nimport { Container } from 'react-bootstrap'\nimport './App.css'\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Header />\n\t\t\t<main className='py-3'>\n\t\t\t\t<Container>\n\t\t\t\t\t<Route path='/profile' component={ProfileScreen}>\n\t\t\t\t\t\t<ProfileScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/register' component={RegisterScreen}>\n\t\t\t\t\t\t<RegisterScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/login' component={LoginScreen}>\n\t\t\t\t\t\t<LoginScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/product/:id' component={ProductScreen}>\n\t\t\t\t\t\t<ProductScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/cart/:id?'>\n\t\t\t\t\t\t<CartScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t<HomeScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</Router>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}