{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userAction.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/screens/HomeScreen.js","actions/productActions.js","components/screens/ProductScreen.js","actions/cartActions.js","components/screens/CartScreen.js","components/FormContainer.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","components/screens/ShippingScreen.js","components/screens/OrderScreens.js","components/screens/UsersListScreen.js","components/screens/ProductListScreen.js","components/screens/UserEditScreen.js","components/screens/PaymentScreen.js","components/screens/PlaceOrderScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","userUpdate","userList","users","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","loginFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","push","useHistory","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","href","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","rating","numReviews","Text","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","props","useEffect","key","sm","md","lg","xl","ProductScreen","useState","qty","setQty","useParams","listProductDetails","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","disabled","addToCart","setItem","stringify","CartScreen","location","useLocation","history","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","current","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","post","login","Group","controlId","Label","placeholder","autoComplete","RgisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postCode","setPostCode","country","setCountry","rows","required","ariant","OrderScreen","num","orderId","useRouteMatch","params","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","itemsPrice","Math","round","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","index","shippingPrice","taxPrice","currency","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UsersListScreen","deleteHandler","confirm","delete","deleteUser","ProductListScreen","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","Check","label","checked","PaymentScreen","setPaymentMethod","PlaceOrderScreen","addDecimals","createOrder","App","path","RegisterScreen","exact","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"mNAOMA,EAAUC,0BAAgB,CAC/BC,YCNiC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACb,ICJ8B,uBDK5B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,ICL8B,uBDM5B,MAAO,CACLG,SAAS,EACTH,SAAUC,EAAOG,SAGrB,ICV2B,oBDWzB,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACzC,QACE,OAAOL,IDNdO,eCSsC,WAGjC,IAFJP,EAEG,uDAFK,CAAEQ,QAAS,CAAEC,QAAS,KAC9BP,EACG,uCACH,OAAQA,EAAOC,MACb,ICnBmC,0BDoBjC,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC9B,ICpBmC,0BDqBjC,MAAO,CAAEA,SAAS,EAAOI,QAASN,EAAOG,SAC3C,ICrBgC,uBDsB9B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACzC,QACE,OAAOL,IDpBZU,KGR0B,WAGnB,IAFJV,EAEG,uDAFK,CAAEW,UAAW,GAAIC,gBAAiB,IAC1CV,EACG,uCACH,OAAQA,EAAOC,MACb,ICPuB,gBDQrB,IAAMU,EAAOX,EAAOG,QAEdS,EAAYd,EAAMW,UAAUI,MAAK,SAACC,GAAD,OAAOA,EAAER,UAAYK,EAAKL,WAEjE,OAAIM,EACK,2BACFd,GADL,IAEEW,UAAWX,EAAMW,UAAUM,KAAI,SAACD,GAAD,OAC7BA,EAAER,UAAYM,EAAUN,QAAUK,EAAOG,OAItC,2BACFhB,GADL,IAEEW,UAAU,GAAD,mBAAMX,EAAMW,WAAZ,CAAuBE,MAGtC,ICxB0B,mBDyBxB,OAAO,2BACFb,GADL,IAEEW,UAAWX,EAAMW,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAER,UAAYN,EAAOG,aAGlE,IC7BoC,6BD8BlC,OAAO,2BACFL,GADL,IAEEY,gBAAiBV,EAAOG,UAE5B,ICjCkC,gCDkChC,OAAO,2BACFL,GADL,IAEEmB,cAAejB,EAAOG,UAI1B,QACE,OAAOL,IHjCdoB,UKiBiC,WAAyB,IAAxBpB,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,IC9B+B,qBD+BhC,MAAO,CAAEC,SAAS,GACjB,IC/B+B,qBDgChC,MAAO,CAAEA,SAAS,EAAOiB,SAAUnB,EAAOG,SACzC,IChC4B,kBDiC7B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACtC,ICjCwB,cDkCzB,MAAO,GACN,QACD,OAAOL,IL3BRsB,aK+BoC,WAAyB,IAAxBtB,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACb,ICxCkC,wBDyCnC,MAAO,CAAEC,SAAS,GACjB,ICzCkC,wBD0CnC,MAAO,CAAEA,SAAS,EAAOiB,SAAUnB,EAAOG,SACzC,IC1C+B,qBD2ChC,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACtC,QACD,OAAOL,ILvCRuB,YK2CmC,WAAmC,IAAlCvB,EAAiC,uDAAzB,CAAEwB,KAAM,IAAMtB,EAAW,uCACrE,OAAQA,EAAOC,MACb,ICjDiC,uBDkDlC,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC3B,IClDiC,uBDmDlC,MAAO,CAAEA,SAAS,EAAOoB,KAAMtB,EAAOG,SACrC,ICnD8B,oBDoD/B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACtC,ICpD+B,qBDqDhC,MAAO,CAAEmB,KAAM,IACd,QACD,OAAOxB,ILrDRyB,kBKyDyC,WAAyB,IAAxBzB,EAAuB,uDAAf,GAAIE,EAAW,uCACjE,OAAQA,EAAOC,MACb,IC3DwC,8BD4DzC,MAAO,CAAEC,SAAS,GACjB,IC5DwC,8BD6DzC,MAAO,CAAEA,SAAS,EAAOsB,SAAS,EAAML,SAAUnB,EAAOG,SACxD,IC7DqC,2BD8DtC,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACtC,QACD,OAAOL,ILjER2B,WKiGkC,WAAmC,IAAlC3B,EAAiC,uDAAzB,CAAEwB,KAAM,IAAMtB,EAAW,uCACpE,OAAQA,EAAOC,MACb,ICtFgC,sBDuFjC,MAAO,CAAEC,SAAS,GACjB,ICvFgC,sBDwFjC,MAAO,CAAEA,SAAS,EAAOsB,SAAS,GACjC,ICxF6B,mBDyF9B,MAAO,CAAEtB,SAAS,EAAOE,MAAOJ,EAAOG,SACtC,ICzF8B,oBD0F/B,MAAO,CACLmB,KAAM,IAEP,QACD,OAAOxB,IL7GR4B,SKoEgC,WAAoC,IAAnC5B,EAAkC,uDAA1B,CAAE6B,MAAO,IAAM3B,EAAW,uCACnE,OAAQA,EAAOC,MACb,ICnE8B,oBDoE/B,MAAO,CAAEC,SAAS,GACjB,ICpE8B,oBDqE/B,MAAO,CAAEA,SAAS,EAAOyB,MAAO3B,EAAOG,SACtC,ICrE2B,iBDsE5B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SACtC,ICtE4B,kBDuE7B,MAAO,CAAEwB,MAAO,IACf,QACD,OAAO7B,IL9ER8B,YOOiC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,IC1BgC,uBD2B9B,MAAO,CACLC,SAAS,GAEb,IC7BgC,uBD8B9B,MAAO,CACLA,SAAS,EACTsB,SAAS,EACTK,MAAO7B,EAAOG,SAElB,IClC6B,oBDmC3B,MAAO,CACLD,SAAS,EACTE,MAAOJ,EAAOG,SAElB,QACE,OAAOL,IPxBZgC,aO4BkC,WAG7B,IAFJhC,EAEG,uDAFK,CAAEI,SAAS,EAAM6B,WAAY,GAAIrB,gBAAiB,IAC1DV,EACG,uCACH,OAAQA,EAAOC,MACb,IC/CiC,wBDgD/B,OAAO,2BACFH,GADL,IAEEI,SAAS,IAEb,ICnDiC,wBDoD/B,MAAO,CACLA,SAAS,EACT2B,MAAO7B,EAAOG,SAElB,ICvD8B,qBDwD5B,MAAO,CACLD,SAAS,EACTE,MAAOJ,EAAOG,SAElB,QACE,OAAOL,IPhDZkC,SOoD8B,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACb,ICjE6B,oBDkE3B,MAAO,CACLC,SAAS,GAEb,ICpE6B,oBDqE3B,MAAO,CACLA,SAAS,EACTsB,SAAS,GAEb,ICxE0B,iBDyExB,MAAO,CACLtB,SAAS,EACTE,MAAOJ,EAAOG,SAElB,IC5E2B,kBD6EzB,MAAO,GACT,QACE,OAAOL,IPtEZmC,aO0EkC,WAAyB,IAAxBnC,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,IC1EiC,wBD2E/B,MAAO,CACLC,SAAS,GAEb,IC7EiC,wBD8E/B,MAAO,CACLA,SAAS,EACTsB,SAAS,GAEb,ICjF8B,qBDkF5B,MAAO,CACLtB,SAAS,EACTE,MAAOJ,EAAOG,SAElB,ICrF+B,sBDsF7B,MAAO,GACT,QACE,OAAOL,IP5FZoC,YOgGiC,WAAqC,IAApCpC,EAAmC,uDAA3B,CAAEqC,OAAQ,IAAMnC,EAAW,uCACpE,OAAQA,EAAOC,MACb,IC1GiC,wBD2G/B,MAAO,CACLC,SAAS,GAEb,IC7GiC,wBD8G/B,MAAO,CACLA,SAAS,EACTiC,OAAQnC,EAAOG,SAEnB,ICjH8B,qBDkH5B,MAAO,CACLD,SAAS,EACTE,MAAOJ,EAAOG,SAElB,ICrH+B,sBDsH7B,MAAO,CAAEgC,OAAQ,IACnB,QACE,OAAOrC,IPlHZsC,UOsH+B,WAAqC,IAApCtC,EAAmC,uDAA3B,CAAEqC,OAAQ,IAAMnC,EAAW,uCAClE,OAAQA,EAAOC,MACb,IC5H8B,qBD6H5B,MAAO,CACLC,SAAS,GAEb,IC/H8B,qBDgI5B,MAAO,CACLA,SAAS,EACTiC,OAAQnC,EAAOG,SAEnB,ICnI2B,kBDoIzB,MAAO,CACLD,SAAS,EACTE,MAAOJ,EAAOG,SAElB,QACE,OAAOL,MPnIPuC,EAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAC3GG,EAAmBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAGrGI,EAAe,CACpBnC,KAAM,CAAEC,UAAW4B,EAClB3B,gBAJiC4B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAKlIrB,UAAW,CAAEC,SAAUuB,IAIlBE,EAAa,CAACC,KAGLC,EAFDC,sBAAYpD,EAASgD,EAAcK,8BAAoBC,kBAAe,WAAf,EAAmBL,K,kHS0B3EM,EAAS,kBAAM,SAACC,GAC3Bb,aAAac,WAAW,YACxBD,EAAS,CAAElD,KH/Dc,gBGgEzBkD,EAAS,CAAElD,KHvDqB,uBGwDhCkD,EAAS,CAAElD,KDpDsB,wBCqDjCkD,EAAS,CAAElD,KH/CkB,sBG0FlBoD,EAAiB,SAACC,GAAD,8CAAQ,WAAOH,EAAUI,GAAjB,yBAAAC,EAAA,sEAElCL,EAAS,CACPlD,KH1G8B,yBGuGE,EAQ9BsD,IADWpC,EAPmB,EAOhCD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZJ,SAgBXC,IAAMC,IAAN,qBAAwBR,GAAMG,GAhBnB,gBAgB1BM,EAhB0B,EAgB1BA,KAERZ,EAAS,CACPlD,KHzH8B,uBG0H9BE,QAAS4D,IApBuB,kDA2BlB,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KHpI2B,oBGqI3BE,QAAS6D,IAhCuB,0DAAR,yDC5CfE,EA5DA,WAAM,IAEbC,EAAOC,cAAPD,KACDhB,EAAWkB,cAETlD,EADUmD,aAAY,SAACxE,GAAD,OAAWA,EAAMoB,aACvCC,SAKR,OACC,gCACC,kBAACoD,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,OAAOC,OAAO,KAAKC,kBAAgB,GAC/D,kBAACC,EAAA,EAAD,KACC,kBAAC,gBAAD,CAAeC,GAAG,KACjB,kBAACN,EAAA,EAAOO,MAAR,gBAED,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiB3B,GAAG,oBACnB,kBAAC4B,EAAA,EAAD,CAAKC,UAAU,WACd,kBAAC,gBAAD,CAAeN,GAAG,SACjB,kBAACK,EAAA,EAAIE,KAAL,CAAUC,KAAK,SACd,uBAAGF,UAAU,yBADd,UAIAhE,EACA,kBAACmE,EAAA,EAAD,CAAaC,MAAOpE,EAASqE,KAAMlC,GAAG,YACrC,kBAAC,gBAAD,CAAeuB,GAAG,YACjB,kBAACS,EAAA,EAAYG,KAAb,iBAED,kBAACH,EAAA,EAAYG,KAAb,CAAkBC,QAxBJ,WACrBvC,EAASD,KACTiB,EAAK,YAsBE,YAGD,kBAAC,gBAAD,CAAeU,GAAG,UACjB,kBAACK,EAAA,EAAIE,KAAL,KACC,uBAAGD,UAAU,gBADd,aAKDhE,GAAYA,EAASwE,SACrB,kBAACL,EAAA,EAAD,CAAaC,MAAM,QAAQjC,GAAG,aAC7B,kBAAC,gBAAD,CAAeuB,GAAG,oBACjB,kBAACS,EAAA,EAAYG,KAAb,eAED,kBAAC,gBAAD,CAAeZ,GAAG,uBACjB,kBAACS,EAAA,EAAYG,KAAb,kBAED,kBAAC,gBAAD,CAAeZ,GAAG,qBACjB,kBAACS,EAAA,EAAYG,KAAb,uB,iBCxCKG,EAZA,WACb,OACE,gCACE,kBAAChB,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKX,UAAU,oBAAf,oC,SCPJY,EAAS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAC5B,OACE,yBAAKf,UAAU,UACb,8BACE,uBAAGgB,MAAO,CAACD,SACTf,UACEa,GAAS,EAAT,cAEIA,GAAS,GAAT,wCAMV,8BACE,uBAAGG,MAAO,CAACD,SACTf,UACEa,GAAS,EAAT,cAEIA,GAAS,IAAT,wCAMV,8BACE,uBAAGG,MAAO,CAACD,SACTf,UACEa,GAAS,EAAT,cAEIA,GAAS,IAAT,wCAMV,8BACE,uBAAGG,MAAO,CAACD,SACTf,UACEa,GAAS,EAAT,cAEIA,GAAS,IAAT,wCAMV,8BACE,uBAAGG,MAAO,CAACD,SACTf,UACEa,GAAS,EAAT,cAEIA,GAAS,IAAT,wCAMV,kCAAQC,GAAQA,KAKtBF,EAAOK,aAAe,CAClBF,MAAM,qBAIKH,QCzCAM,EAzBC,SAAC,GAAiB,IAAf/F,EAAc,EAAdA,QACjB,OACE,kBAACgG,EAAA,EAAD,CAAMnB,UAAU,oBACd,kBAAC,OAAD,CAAMN,GAAE,mBAAcvE,EAAQiG,MAC5B,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKnG,EAAQoG,SAEzB,kBAACJ,EAAA,EAAKK,KAAN,KACE,kBAAC,OAAD,CAAM9B,GAAE,mBAAcvE,EAAQiG,MAC5B,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACb,gCAASvG,EAAQkF,QAGrB,kBAACc,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACb,kBAAC,EAAD,CACEb,MAAO1F,EAAQwG,OACfb,KAAI,UAAK3F,EAAQyG,WAAb,eAIR,kBAACT,EAAA,EAAKU,KAAN,CAAWH,GAAG,MAAd,OAAqBvG,EAAQ2G,U,SCpB/BC,EAAU,SAAC,GAA2B,IAAzBzC,EAAwB,EAAxBA,QAAS0C,EAAe,EAAfA,SAC1B,OAAO,kBAACC,EAAA,EAAD,CAAO3C,QAASA,GAAU0C,IAGnCD,EAAQd,aAAe,CACrB3B,QAAS,QAGIyC,Q,SCSAG,EAjBA,WACb,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLrB,MAAO,CACLsB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,UAGX,0BAAMzC,UAAU,WAAhB,gBC2BS0C,EAlCI,SAAAC,GAEjB,IAAM3E,EAAWkB,cACXxE,EAAcyE,aAAY,SAAAxE,GAAK,OAAIA,EAAMD,eACvCK,EAA6BL,EAA7BK,QAASE,EAAoBP,EAApBO,MAAOL,EAAaF,EAAbE,SAQxB,OAPAgI,qBAAU,WACR5E,ECXwB,uCAAM,WAAOA,GAAP,iBAAAK,EAAA,sEAE1BL,EAAS,CAAElD,KfLiB,yBeGF,SAGH4D,IAAMC,IAAN,iBAHG,gBAGlBC,EAHkB,EAGlBA,KACRZ,EAAS,CACLlD,KfPwB,uBeQxBE,QAAS4D,IANa,gDAS1BZ,EAAS,CACPlD,KfXuB,oBeYvBE,QACE,KAAM8D,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAdY,yDAAN,yDDavB,CAACb,IAKF,oCACE,+CACCjD,EACC,kBAAC,EAAD,MACEE,EAAS,kBAAC,EAAD,CAASqE,QAASrE,GAAQA,GAEjC,oCACE,kBAACyF,EAAA,EAAD,KACG9F,EAASgB,KAAI,SAACT,GAAD,OACZ,kBAACwF,EAAA,EAAD,CAAKkC,IAAK1H,EAAQiG,IAAK0B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,kBAAC,EAAD,CAAS9H,QAASA,Y,0CEuFvB+H,EAtGO,WAAM,MAEJC,mBAAS,GAFL,mBAEnBC,EAFmB,KAEdC,EAFc,KAGlBrE,EAASC,cAATD,KACAb,EAAOmF,cAAPnF,GAEFH,EAAWkB,cACXhE,EAAiBiE,aAAY,SAAAxE,GAAK,OAAIA,EAAMO,kBAC1CH,EAA4BG,EAA5BH,QAASE,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QACxByH,qBAAU,WACR5E,EDH8B,SAACG,GAAD,8CAAQ,WAAOH,GAAP,iBAAAK,EAAA,sEAEtCL,EAAS,CAAElD,KfrBwB,4BemBG,SAIf4D,IAAMC,IAAN,wBAA2BR,IAJZ,gBAI9BS,EAJ8B,EAI9BA,KAERZ,EAAS,CACPlD,KfzBiC,0Be0BjCE,QAAS4D,IAR2B,gDAWtCZ,EAAS,CACPlD,Kf7B8B,uBe8B9BE,QACE,KAAM8D,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAhBwB,yDAAR,sDCGrB0E,CAAmBpF,MAC3B,CAACA,EAAIH,IAKR,OACE,oCACE,kBAAC,OAAD,CAAMgC,UAAU,qBAAqBN,GAAE,KAAvC,WAGC3E,EAAU,kBAAC,EAAD,MAAoBE,EAAQ,kBAAC,EAAD,CAASqE,QAAQ,WAAuB,kBAACoB,EAAA,EAAD,KAC7E,kBAACC,EAAA,EAAD,CAAKoC,GAAG,KACN,kBAACS,EAAA,EAAD,CAAOlC,IAAKnG,EAAQoG,MAAOkC,IAAKtI,EAAQkF,KAAMqD,OAAK,KAErD,kBAAC/C,EAAA,EAAD,CAAKoC,GAAG,KACN,kBAACY,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACqE,EAAA,EAAUrD,KAAX,KACE,4BAAKnF,EAAQkF,OAEf,kBAACsD,EAAA,EAAUrD,KAAX,KACE,kBAAC,EAAD,CACEO,MAAO1F,EAAQwG,OACfb,KAAI,UAAK3F,EAAQyG,WAAb,eAGR,kBAAC+B,EAAA,EAAUrD,KAAX,oBAA0BnF,EAAQ2G,OAClC,kBAAC6B,EAAA,EAAUrD,KAAX,KAAiBnF,EAAQyI,eAG7B,kBAACjD,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAAC5B,EAAA,EAAD,KACE,kBAACwC,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACqE,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,KACE,wCAAWxF,EAAQ2G,UAKzB,kBAAC6B,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,KACE,gCAASxF,EAAQ0I,aAAe,EAAvB,0BAId1I,EAAQ0I,aAAe,GACtB,kBAACF,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KACE,kBAACmD,EAAA,EAAKC,QAAN,CACErC,GAAG,SACHb,MAAOuC,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAOY,EAAEC,OAAOrD,SAEhC,YAAIsD,MAAMhJ,EAAQ0I,cAAcO,QAAQxI,KACvC,SAACD,GAAD,OACE,4BAAQkH,IAAKlH,EAAI,EAAGkF,MAAOlF,EAAI,GAC5BA,EAAI,UASrB,kBAACgI,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0D,EAAA,EAAD,CACE9D,QAzEK,WACvBvB,EAAK,SAAD,OAAUb,EAAV,gBAAoBiF,KAyENpD,UAAU,aACVsE,SAA0C,IAAzBnJ,EAAQ0I,cAH3B,wBClGPU,EAAY,SAACpG,EAAIiF,GAAL,8CAAa,WAAOpF,EAAUI,GAAjB,iBAAAC,EAAA,sEACXK,IAAMC,IAAN,wBAA2BR,IADhB,gBAC1BS,EAD0B,EAC1BA,KACRZ,EAAS,CACLlD,KfNqB,gBeOrBE,QAAS,CACLG,QAASyD,EAAKwC,IACdf,KAAMzB,EAAKyB,KACXkB,MAAO3C,EAAK2C,MACZO,MAAOlD,EAAKkD,MACZ+B,aAAcjF,EAAKiF,aACnBT,SAGRjG,aAAaqH,QAAQ,YAAanH,KAAKoH,UAAUrG,IAAW/C,KAAKC,YAb/B,2CAAb,yDCiFVoJ,GA7EI,WAAM,IAEfvG,EAAOmF,cAAPnF,GACFwG,EAAWC,cACXC,EAAU5F,cAEVmE,EAAMuB,EAASG,OAASC,OAAOJ,EAASG,OAAOE,MAAM,KAAK,IAAM,EAEhEhH,EAAWkB,cAET5D,EADK6D,aAAY,SAAAxE,GAAK,OAAIA,EAAMU,QAChCC,UAERsH,qBAAU,WACJzE,GACFH,EAASuG,EAAUpG,EAAIiF,MAExB,CAACjF,EAAIH,EAAUoF,IAElB,IAAM6B,EAAwB,SAAC9G,GAC7BH,EDR0B,SAACG,GAAD,OAAQ,SAACH,EAAUI,GAC7CJ,EAAS,CACPlD,KfnB0B,mBeoB1BE,QAASmD,IAGXhB,aAAaqH,QAAQ,YAAanH,KAAKoH,UAAUrG,IAAW/C,KAAKC,aCExD4J,CAAe/G,KAM1B,OAAO,kBAACuC,EAAA,EAAD,KACL,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACP,6CACsB,IAArBzH,EAAU6J,OAAe,kBAAC,EAAD,2BAA4B,kBAAC,OAAD,CAAMzF,GAAG,KAAT,YACjD,kBAACiE,EAAA,EAAD,CAAWrE,QAAQ,SACnBhE,EAAUM,KAAI,SAAAJ,GAAI,OAAK,kBAACmI,EAAA,EAAUrD,KAAX,CAAgBuC,IAAKrH,EAAKL,SAChD,kBAACuF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAACS,EAAA,EAAD,CAAOlC,IAAK9F,EAAK+F,MAAOkC,IAAKjI,EAAK6E,KAAMqD,OAAK,EAAC0B,SAAO,KACjD,kBAACzE,EAAA,EAAD,CAAKoC,GAAI,GACb,kBAAC,OAAD,CAAMrD,GAAE,mBAAclE,EAAKL,UAAYK,EAAK6E,OAE9C,kBAACM,EAAA,EAAD,CAAKoC,GAAI,GAAT,QAAevH,EAAKsG,OACpB,kBAACnB,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAACe,EAAA,EAAKC,QAAN,CACErC,GAAG,SACHb,MAAOrF,EAAK4H,IACZY,SAAU,SAACC,GAAD,OAAOjG,EAASuG,EAAU/I,EAAKL,QAAS4J,OAAOd,EAAEC,OAAOrD,WAEjE,YAAIsD,MAAM3I,EAAKqI,cAAcO,QAAQxI,KACpC,SAACD,GAAD,OACE,4BAAQkH,IAAKlH,EAAI,EAAGkF,MAAOlF,EAAI,GAC5BA,EAAI,QAMf,kBAACgF,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAACsB,EAAA,EAAD,CAAQvJ,KAAK,SAASwE,QAAQ,QAAQiB,QAAS,kBAAM0E,EAAsBzJ,EAAKL,WAC9E,uBAAG6E,UAAU,0BAO3B,kBAACW,EAAA,EAAD,KAAK,kBAACQ,EAAA,EAAD,KAAM,kBAACwC,EAAA,EAAD,CAAWrE,QAAQ,SAC5B,kBAACqE,EAAA,EAAUrD,KAAX,KACE,yCAAehF,EAAU+J,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,EAAQnC,MAAK,GAArE,WADF,QAEiB9H,EAAU+J,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,EAAQnC,IAAMmC,EAAQzD,QAAO,GAAG0D,QAAQ,IAElG,kBAAC7B,EAAA,EAAUrD,KAAX,KACE,kBAAC+D,EAAA,EAAD,CAAQvJ,KAAK,SAASkF,UAAU,YAAYsE,SAA+B,IAAdhJ,EAAyBiF,QA9CpE,WACtBsE,EAAQ7F,KAAR,8BA6CI,kBC5DOyG,GAZO,SAAC,GAAgB,IAAfzD,EAAc,EAAdA,SACvB,OACC,kBAACvC,EAAA,EAAD,KACC,kBAACiB,EAAA,EAAD,CAAKV,UAAU,6BACd,kBAACW,EAAA,EAAD,CAAK+E,GAAI,GAAI3C,GAAI,GACff,MCsES2D,GArEK,WAAM,IAEjBb,EAAWF,cAAXE,OACA9F,EAASC,cAATD,KAHiB,EAKCmE,mBAAS,IALV,mBAKlByC,EALkB,KAKXC,EALW,OAMO1C,mBAAS,IANhB,mBAMlB2C,EANkB,KAMRC,EANQ,KAQnB/H,EAAWkB,cAEXnD,EAAYoD,aAAY,SAACxE,GAAD,OAAWA,EAAMoB,aACvChB,EAA6BgB,EAA7BhB,QAASE,EAAoBc,EAApBd,MAAOe,EAAaD,EAAbC,SAElBgK,EAAWlB,EAASA,EAAOE,MAAM,KAAK,GAAK,IAEjDpC,qBAAU,WACL5G,GACHgD,EAAKgH,KAEJ,CAAChH,EAAMhD,EAAUgK,IAMpB,OACC,kBAAC,GAAD,KACC,uCACC/K,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GACpCF,GAAW,kBAAC,EAAD,MACZ,kBAAC+I,EAAA,EAAD,CAAMmC,SATc,SAAChC,GACtBA,EAAEiC,iBACFlI,EbHmB,SAAC4H,EAAOE,GAAR,8CAAqB,WAAO9H,GAAP,mBAAAK,EAAA,sEAEtCL,EAAS,CACPlD,KHhC4B,uBGmCxBwD,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfG,IAAMyH,KAC3B,mBACA,CAAEP,QAAOE,YACTxH,GAfoC,gBAY9BM,EAZ8B,EAY9BA,KAMRZ,EAAS,CACPlD,KH/C4B,qBGgD5BE,QAAS4D,IAGXzB,aAAaqH,QAAQ,WAAYnH,KAAKoH,UAAU7F,IAvBV,kDAyBtCZ,EAAS,CACPlD,KHrDyB,kBGsDzBE,QACE,KAAM8D,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UA9BwB,0DAArB,sDaGVuH,CAAMR,EAAOE,MAQpB,kBAAChC,EAAA,EAAKuC,MAAN,CAAYC,UAAU,SACrB,kBAACxC,EAAA,EAAKyC,MAAN,sBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,QACL0L,YAAY,cACZC,aAAa,QACb5F,MAAO+E,EACP5B,SAAU,SAACC,GAAD,OAAO4B,EAAS5B,EAAEC,OAAOrD,WAIrC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,YACrB,kBAACxC,EAAA,EAAKyC,MAAN,iBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,WACL0L,YAAY,iBACZC,aAAa,mBACb5F,MAAOiF,EACP9B,SAAU,SAACC,GAAD,OAAO8B,EAAY9B,EAAEC,OAAOrD,WAIxC,kBAACwD,EAAA,EAAD,CAAQvJ,KAAK,SAASwE,QAAQ,WAA9B,YAID,kBAACoB,EAAA,EAAD,CAAKV,UAAU,QACd,kBAACW,EAAA,EAAD,4BACsB,IACrB,kBAAC,OAAD,CAAMjB,GAAIsG,EAAQ,6BAAyBA,GAAzB,YAAmDhF,MAAO,CAAED,MAAO,YAArF,eC6BU2F,GAzFO,WAAM,IAEnB5B,EAAWF,cAAXE,OACA9F,EAASC,cAATD,KAHmB,EAKHmE,mBAAS,IALN,mBAKpB9C,EALoB,KAKdsG,EALc,OAMDxD,mBAAS,IANR,mBAMpByC,EANoB,KAMbC,EANa,OAOK1C,mBAAS,IAPd,mBAOpB2C,EAPoB,KAOVC,EAPU,OAQmB5C,mBAAS,IAR5B,mBAQpByD,EARoB,KAQHC,EARG,OASG1D,mBAAS,MATZ,mBASpBtE,EAToB,KASXiI,EATW,KAWrB9I,EAAWkB,cAEXjD,EAAekD,aAAY,SAACxE,GAAD,OAAWA,EAAMsB,gBAC1ClB,EAA6BkB,EAA7BlB,QAASE,EAAoBgB,EAApBhB,MAAOe,EAAaC,EAAbD,SAElBgK,EAAWlB,EAASA,EAAOE,MAAM,KAAK,GAAK,IAEjDpC,qBAAU,WACL5G,GACHgD,EAAKgH,KAEJ,CAAChH,EAAMhD,EAAUgK,IAUpB,OACC,kBAAC,GAAD,KACC,uCACCnH,GAAW,kBAAC,EAAD,CAASS,QAAQ,UAAUT,GACtC5D,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GACpCF,GAAW,kBAAC,EAAD,MACZ,kBAAC+I,EAAA,EAAD,CAAMmC,SAdc,SAAChC,GACtBA,EAAEiC,iBACEJ,IAAac,EAChB5I,EdoCqB,SAACqC,EAAMuF,EAAOE,GAAd,8CAA2B,WAAO9H,GAAP,mBAAAK,EAAA,sEAE/CL,EAAS,CACPlD,KHtE+B,0BGyE3BwD,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxBG,IAAMyH,KAC3B,aACA,CAAE9F,OAAMuF,QAAOE,YACfxH,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAMRZ,EAAS,CACPlD,KHrF+B,wBGsF/BE,QAAS4D,IAGXZ,EAAS,CACPlD,KH/F4B,qBGgG5BE,QAAS4D,IAGXzB,aAAaqH,QAAQ,WAAYnH,KAAKoH,UAAU7F,IA5BD,kDA8B/CZ,EAAS,CACPlD,KHhG4B,qBGiG5BE,QACE,KAAM8D,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAnCiC,0DAA3B,sDcpCZkI,CAAS1G,EAAMuF,EAAOE,IAE/BgB,EAAW,2BAUV,kBAAChD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,QACrB,kBAACxC,EAAA,EAAKyC,MAAN,aACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,OACL0L,YAAY,aACZC,aAAa,OACb5F,MAAOR,EACP2D,SAAU,SAACC,GAAD,OAAO0C,EAAQ1C,EAAEC,OAAOrD,WAGpC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,SACrB,kBAACxC,EAAA,EAAKyC,MAAN,sBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,QACL0L,YAAY,cACZC,aAAa,QACb5F,MAAO+E,EACP5B,SAAU,SAACC,GAAD,OAAO4B,EAAS5B,EAAEC,OAAOrD,WAIrC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,YACrB,kBAACxC,EAAA,EAAKyC,MAAN,iBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,WACL0L,YAAY,iBACZC,aAAa,mBACb5F,MAAOiF,EACP9B,SAAU,SAACC,GAAD,OAAO8B,EAAY9B,EAAEC,OAAOrD,WAGxC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,mBACrB,kBAACxC,EAAA,EAAKyC,MAAN,iBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,WACL0L,YAAY,mBACZC,aAAa,mBACb5F,MAAO+F,EACP5C,SAAU,SAACC,GAAD,OAAO4C,EAAmB5C,EAAEC,OAAOrD,WAI/C,kBAACwD,EAAA,EAAD,CAAQvJ,KAAK,SAASwE,QAAQ,WAA9B,e,UC0EW0H,GA1JO,WAAM,IAEnBhI,EAASC,cAATD,KAFmB,EAIHmE,mBAAS,IAJN,mBAIpB9C,EAJoB,KAIdsG,EAJc,OAKDxD,mBAAS,IALR,mBAKpByC,EALoB,KAKbC,EALa,OAMK1C,mBAAS,IANd,mBAMpB2C,EANoB,KAMVC,EANU,OAOmB5C,mBAAS,IAP5B,mBAOpByD,EAPoB,KAOHC,EAPG,OAQG1D,mBAAS,MARZ,mBAQpBtE,EARoB,KAQXiI,EARW,KAUrB9I,EAAWkB,cAEXhD,EAAciD,aAAY,SAACxE,GAAD,OAAWA,EAAMuB,eACzCnB,EAAyBmB,EAAzBnB,QAASE,EAAgBiB,EAAhBjB,MAAOkB,EAASD,EAATC,KAEhBH,EADUmD,aAAY,SAACxE,GAAD,OAAWA,EAAMuB,eACvCF,SAEAK,EADkB8C,aAAY,SAACxE,GAAD,OAAWA,EAAMyB,qBAC/CC,QACFU,EAAcoC,aAAY,SAACxE,GAAD,OAAWA,EAAMoC,eAChCkK,EAA8ClK,EAAvDhC,QAA+BmM,EAAwBnK,EAA/B9B,MAAoB+B,EAAWD,EAAXC,OAEpD4F,qBAAU,WACJzG,EAGCA,GAASA,EAAKkE,MAIlBsG,EAAQxK,EAAKkE,MACbwF,EAAS1J,EAAKyJ,SAJd5H,EAASE,EAAe,YACxBF,ECoJwB,uCAAM,WAAOA,EAAUI,GAAjB,yBAAAC,EAAA,sEAE9BL,EAAS,CACPlD,KjB/K+B,0BiB4KH,EAQ1BsD,IADWpC,EAPe,EAO5BD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZR,SAgBPC,IAAMC,IAAN,uBAAkCL,GAhB3B,gBAgBtBM,EAhBsB,EAgBtBA,KAERZ,EAAS,CACPlD,KjB9L+B,wBiB+L/BE,QAAS4D,IApBmB,kDA2Bd,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KjBzM4B,qBiB0M5BE,QAAS6D,IAhCmB,0DAAN,0DDxJzBG,EAAK,YAUJ,CAAChB,EAAUgB,EAAMhD,EAAUG,IAU9B,OACC,kBAACuE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACR,4CACClE,GAAW,kBAAC,EAAD,CAASS,QAAQ,UAAUT,GACtCxC,GAAW,kBAAC,EAAD,CAASiD,QAAQ,WAAjB,mBACXrE,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GACpCF,GAAW,kBAAC,EAAD,MACZ,kBAAC+I,EAAA,EAAD,CAAMmC,SAhBa,SAAChC,GACtBA,EAAEiC,iBACEJ,IAAac,EAChBE,EAAW,0BAEX9I,EfmG8B,SAAC7B,GAAD,8CAAU,WAAO6B,EAAUI,GAAjB,yBAAAC,EAAA,sEAEvCL,EAAS,CACPlD,KH1IqC,gCGuIA,EAQnCsD,IADWpC,EAPwB,EAOrCD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAbC,SAiBhBC,IAAMyI,IAAN,qBAAgChL,EAAMmC,GAjBtB,gBAiB/BM,EAjB+B,EAiB/BA,KAERZ,EAAS,CACPlD,KH1JqC,8BG2JrCE,QAAS4D,IArB4B,kDA4BvB,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KHrKkC,2BGsKlCE,QAAS6D,IAjC4B,0DAAV,wDenGrBuI,CAAkB,CAAEjJ,GAAIhC,EAAKiF,IAAKf,OAAMuF,QAAOE,gBAYtD,kBAAChC,EAAA,EAAKuC,MAAN,CAAYC,UAAU,QACrB,kBAACxC,EAAA,EAAKyC,MAAN,aACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,OACL0L,YAAY,aACZC,aAAa,OACb5F,MAAOR,EACP2D,SAAU,SAACC,GAAD,OAAO0C,EAAQ1C,EAAEC,OAAOrD,WAGpC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,SACrB,kBAACxC,EAAA,EAAKyC,MAAN,sBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,QACL0L,YAAY,cACZC,aAAa,QACb5F,MAAO+E,EACP5B,SAAU,SAACC,GAAD,OAAO4B,EAAS5B,EAAEC,OAAOrD,WAIrC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,YACrB,kBAACxC,EAAA,EAAKyC,MAAN,iBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,WACL0L,YAAY,iBACZC,aAAa,mBACb5F,MAAOiF,EACP9B,SAAU,SAACC,GAAD,OAAO8B,EAAY9B,EAAEC,OAAOrD,WAGxC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,mBACrB,kBAACxC,EAAA,EAAKyC,MAAN,iBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,WACL0L,YAAY,mBACZC,aAAa,mBACb5F,MAAO+F,EACP5C,SAAU,SAACC,GAAD,OAAO4C,EAAmB5C,EAAEC,OAAOrD,WAI/C,kBAACwD,EAAA,EAAD,CAAQvJ,KAAK,SAASwE,QAAQ,WAA9B,YAKF,kBAACqB,EAAA,EAAD,CAAKoC,GAAI,GACR,yCACCkE,EACA,kBAAC,EAAD,MACGC,EACH,kBAAC,EAAD,CAAS5H,QAAQ,UAAU4H,GAE3B,kBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACzH,UAAU,YAClD,+BACC,4BACC,kCACA,oCACA,qCACA,oCACA,yCACA,+BAGF,+BACEhD,EAAOpB,KAAI,SAACc,GAAD,OACX,wBAAImG,IAAKnG,EAAM0E,KACd,4BAAK1E,EAAM0E,KACX,4BAAK1E,EAAMgL,UAAUC,UAAU,EAAG,KAClC,4BAAKjL,EAAMkL,YACX,4BACElL,EAAMmL,OACNnL,EAAMoL,OAAOH,UAAU,EAAG,IAE1B,uBAAG3H,UAAU,eAAegB,MAAO,CAAED,MAAO,UAG9C,4BACErE,EAAMqL,YACNrL,EAAMsL,YAAYL,UAAU,EAAG,IAE/B,uBAAG3H,UAAU,eAAegB,MAAO,CAAED,MAAO,UAG9C,4BACC,kBAAC,gBAAD,CAAerB,GAAE,iBAAYhD,EAAM0E,MAClC,kBAACiD,EAAA,EAAD,CAAQrE,UAAU,SAASV,QAAQ,SAAnC,sBE9GI2I,GAnCO,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,MACxC,OACE,kBAACtI,EAAA,EAAD,CAAKC,UAAU,+BACb,kBAACD,EAAA,EAAIO,KAAL,KACC4H,EACK,kBAAC,gBAAD,CAAexI,GAAG,UAClB,kBAACK,EAAA,EAAIE,KAAL,KAAU,uBAAGD,UAAU,iBAAvB,aAED,kBAACD,EAAA,EAAIE,KAAL,CAAUqE,UAAQ,GAAlB,YAEL,kBAACvE,EAAA,EAAIO,KAAL,KACC6H,EACK,kBAAC,gBAAD,CAAezI,GAAG,aAClB,kBAACK,EAAA,EAAIE,KAAL,KAAU,uBAAGD,UAAU,iBAAvB,cAED,kBAACD,EAAA,EAAIE,KAAL,CAAUqE,UAAQ,GAAlB,aAEL,kBAACvE,EAAA,EAAIO,KAAL,KACC8H,EACK,kBAAC,gBAAD,CAAe1I,GAAG,YAClB,kBAACK,EAAA,EAAIE,KAAL,KAAU,uBAAGD,UAAU,iBAAvB,aAED,kBAACD,EAAA,EAAIE,KAAL,CAAUqE,UAAQ,GAAlB,YAEL,kBAACvE,EAAA,EAAIO,KAAL,KACC+H,EACK,kBAAC,gBAAD,CAAe3I,GAAG,eAClB,kBAACK,EAAA,EAAIE,KAAL,KAAU,uBAAGD,UAAU,iBAAvB,iBAED,kBAACD,EAAA,EAAIE,KAAL,CAAUqE,UAAQ,GAAlB,kBCqDIgE,GA9EQ,WAAM,IAEpBtJ,EAASC,cAATD,KAEAzD,EADK4D,aAAY,SAACxE,GAAD,OAAWA,EAAMU,QAClCE,gBAJoB,EAME4H,mBAAS5H,EAAgBgN,SAN3B,mBAMrBA,EANqB,KAMZC,EANY,OAOJrF,mBAAS5H,EAAgBkN,MAPrB,mBAOrBA,EAPqB,KAOfC,EAPe,OAQIvF,mBAAS5H,EAAgBoN,UAR7B,mBAQrBA,EARqB,KAQXC,EARW,OASEzF,mBAAS5H,EAAgBsN,SAT3B,mBASrBA,EATqB,KASZC,EATY,KAUtB9K,EAAWkB,cACGC,aAAY,SAACxE,GAAD,OAAWA,EAAMuB,eACzCC,MAGP6C,EAAK,UAQN,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAekJ,OAAK,EAACC,OAAK,IAC1B,wCACA,kBAACrE,EAAA,EAAD,CAAMmC,SATc,SAAChC,GRAW,IAACrF,EQClCqF,EAAEiC,iBACFlI,GRFkCY,EQEL,CAAE2J,UAASE,OAAME,WAAUE,WRFb,SAAC7K,GAC1CA,EAAS,CACPlD,Kf1BoC,6Be2BpCE,QAAS4D,IAGXzB,aAAaqH,QAAQ,kBAAmBnH,KAAKoH,UAAU7F,OQHzDI,EAAK,6BAOH,kBAAC8E,EAAA,EAAKuC,MAAN,CAAYC,UAAU,WACrB,kBAACxC,EAAA,EAAKyC,MAAN,eACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,WACL4G,GAAG,WACHqH,KAAK,IACLC,UAAQ,EACRxC,YAAY,gBACZ3F,MAAO0H,EACPvE,SAAU,SAACC,GAAD,OAAOuE,EAAWvE,EAAEC,OAAOrD,WAGvC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,YACrB,kBAACxC,EAAA,EAAKyC,MAAN,iBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,OACLkO,UAAQ,EACRxC,YAAY,iBACZ3F,MAAO8H,EACP3E,SAAU,SAACC,GAAD,OAAO2E,EAAY3E,EAAEC,OAAOrD,WAGxC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,QACrB,kBAACxC,EAAA,EAAKyC,MAAN,aACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,OACLkO,UAAQ,EACRxC,YAAY,aACZ3F,MAAO4H,EACPzE,SAAU,SAACC,GAAD,OAAOyE,EAAQzE,EAAEC,OAAOrD,WAGpC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,WACrB,kBAACxC,EAAA,EAAKyC,MAAN,gBACA,kBAACzC,EAAA,EAAKC,QAAN,CACCjJ,KAAK,OACLkO,UAAQ,EACRxC,YAAY,gBACZ3F,MAAOgI,EACP7E,SAAU,SAACC,GAAD,OAAO6E,EAAW7E,EAAEC,OAAOrD,WAGvC,kBAACwD,EAAA,EAAD,CAAQvJ,KAAK,SAASmO,OAAO,WAA7B,e,SC2KWC,GAvOK,WAAO,IAuBFC,EAtBdnK,EAAOC,cAAPD,KAEHoK,EADaC,cAAVC,OACcnL,GAHC,EAKQgF,oBAAS,GALjB,mBAKjBoG,EALiB,KAKPC,EALO,KAOlBxL,EAAWkB,cAEXvC,EAAewC,aAAY,SAACxE,GAAD,OAAWA,EAAMgC,gBAC1CD,EAA0BC,EAA1BD,MAAO3B,EAAmB4B,EAAnB5B,QAASE,EAAU0B,EAAV1B,MAElB4B,EAAWsC,aAAY,SAACxE,GAAD,OAAWA,EAAMkC,YAC7B4M,EAAoC5M,EAA7C9B,QAA8B2O,EAAe7M,EAAxBR,QAEvBS,EAAeqC,aAAY,SAACxE,GAAD,OAAWA,EAAMmC,gBACjC6M,EAA4C7M,EAArD/B,QAAkC6O,EAAmB9M,EAA5BT,QAGzBL,EADUmD,aAAY,SAACxE,GAAD,OAAWA,EAAMoB,aACvCC,SAER,IAAKjB,EAAS,CAMZ2B,EAAMmN,YAJeV,EAKnBzM,EAAME,WAAWyI,QAAO,SAACC,EAAK9J,GAAN,OAAe8J,EAAM9J,EAAKsG,MAAQtG,EAAK4H,MAAK,IAJ5D0G,KAAKC,MAAY,IAANZ,GAAa,KAAK3D,QAAQ,IAQjD5C,qBAAU,WACH5G,GACHgD,EAAK,UAGP,IHO4Bb,EGPtB6L,EAAe,uCAAG,gCAAA3L,EAAA,sEACWK,IAAMC,IAAI,sBADrB,gBACRsL,EADQ,EACdrL,MACFsL,EAASC,SAASC,cAAc,WAC/BtP,KAAO,kBACdoP,EAAO5I,IAAP,kDAAwD2I,EAAxD,iBACAC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdd,GAAY,IAEdW,SAASI,KAAKC,YAAYN,GATJ,4CAAH,sDAYhBxN,GAASgN,GAAcE,GAAkBlN,EAAM0E,MAAQgI,GAC1DpL,EAAS,CAAElD,KpBzDc,oBoB0DzBkD,EAAS,CAAElD,KpB5CkB,wBoB6C7BkD,GHR0BG,EGQDiL,EHRA,uCAAQ,WAAOpL,EAAUI,GAAjB,yBAAAC,EAAA,sEAEnCL,EAAS,CACPlD,KjB7D+B,0BiB0DE,EAQ/BsD,IADWpC,EAPoB,EAOjCD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZH,SAgBZC,IAAMC,IAAN,sBAAyBR,GAAMG,GAhBnB,gBAgB3BM,EAhB2B,EAgB3BA,KAERZ,EAAS,CACPlD,KjB5E+B,wBiB6E/BE,QAAS4D,IApBwB,kDA2BnB,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KjBvF4B,qBiBwF5BE,QAAS6D,IAhCwB,0DAAR,2DGSfnC,EAAMmL,SACX4C,OAAOC,OAGVlB,GAAY,GAFZQ,OAKH,CAAChM,EAASgB,EAAMoK,EAASM,EAAYE,EAAgBlN,EAAMV,IAW9D,OAAOjB,EACL,kBAAC,EAAD,MACEE,EACF,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAE3B,oCACE,yCAAeyB,EAAM0E,KACrB,kBAACV,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAACY,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACqE,EAAA,EAAUrD,KAAX,KACE,wCACA,2BACE,0CADF,IAC2B5D,EAAMP,KAAKkE,MAEtC,2BACE,2CACA,uBAAGH,KAAI,iBAAYxD,EAAMP,KAAKyJ,QAAUlJ,EAAMP,KAAKyJ,QAErD,2BACE,4CAAyB,6BACxBlJ,EAAMnB,gBAAgBgN,QAAQ,6BAC9B7L,EAAMnB,gBAAgBoN,SAAS,6BAC/BjM,EAAMnB,gBAAgBkN,KAAK,6BAC3B/L,EAAMnB,gBAAgBsN,SAExBnM,EAAMqL,YACL,kBAAC,EAAD,CAASzI,QAAQ,WAAjB,gBACgB5C,EAAMsL,aAGtB,kBAAC,EAAD,CAAS1I,QAAQ,QAAjB,kBAIJ,kBAACqE,EAAA,EAAUrD,KAAX,KACE,8CACA,2BACE,4CACC5D,EAAMZ,eAERY,EAAMmL,OACL,kBAAC,EAAD,CAASvI,QAAQ,WAAjB,WAAoC5C,EAAMoL,QAE1C,kBAAC,EAAD,CAASxI,QAAQ,QAAjB,aAIJ,kBAACqE,EAAA,EAAUrD,KAAX,KACE,2CAC6B,IAA5B5D,EAAME,WAAWuI,OAChB,kBAAC,EAAD,uBAEA,kBAACxB,EAAA,EAAD,CAAWrE,QAAQ,SAChB5C,EAAME,WAAWhB,KAAI,SAACJ,EAAMmP,GAAP,OACpB,kBAAChH,EAAA,EAAUrD,KAAX,CAAgBuC,IAAK8H,GACrB,kBAACjK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACL,kBAACS,EAAA,EAAD,CACIlC,IAAK9F,EAAK+F,MACVkC,IAAKjI,EAAK6E,KACVqD,OAAK,EACL0B,SAAO,KAGf,kBAACzE,EAAA,EAAD,KACI,kBAAC,OAAD,CAAMjB,GAAE,mBAAclE,EAAKL,UACtBK,EAAK6E,OAGd,kBAACM,EAAA,EAAD,CAAKoC,GAAI,GACL,kBAACrC,EAAA,EAAD,KACI,yCAAYlF,EAAKsG,OAAgB,KAErC,kBAACpB,EAAA,EAAD,KACI,2BACI,wCADJ,IAC2BlF,EAAK4H,MAGpC,kBAAC1C,EAAA,EAAD,KACI,2BACI,+CAAkBlF,EAAK4H,IAAM5H,EAAKsG,MAAlC,iBAY5B,kBAACnB,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAAC5B,EAAA,EAAD,KACE,kBAACwC,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACqE,EAAA,EAAUrD,KAAX,KACE,8CAEF,kBAACqD,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,aAAQjE,EAAMmN,cAGlB,kBAAClG,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,aAAQjE,EAAMkO,iBAGlB,kBAACjH,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,aAAQjE,EAAMmO,YAGlB,kBAAClH,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,aAAQjE,EAAMkL,eAGhBlL,EAAMmL,QACN,kBAAClE,EAAA,EAAUrD,KAAX,KACGmJ,GAAc,kBAAC,EAAD,MACbF,EAGA,kBAAC,gBAAD,CACEuB,SAAS,MACTC,OAAQrO,EAAMkL,WACdoD,UA7IU,SAACC,GAC7BC,QAAQC,IAAIF,GACZjN,EHiBoB,SAACoL,EAAS6B,GAAV,8CAA4B,WAClDjN,EACAI,GAFkD,yBAAAC,EAAA,sEAKhDL,EAAS,CACPlD,KjBjG2B,sBiB2FmB,EAW5CsD,IADWpC,EAViC,EAU9CD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAhBU,SAoBzBC,IAAMyI,IAAN,sBACNiC,EADM,QAErB6B,EACA3M,GAvB8C,gBAoBxCM,EApBwC,EAoBxCA,KAMRZ,EAAS,CACPlD,KjBrH2B,oBiBsH3BE,QAAS4D,IA5BqC,kDAmChC,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KjBhIwB,iBiBiIxBE,QAAS6D,IAxCqC,0DAA5B,wDGjBXuM,CAAShC,EAAS6B,OAsIX,kBAAC,EAAD,OAULtB,GAAkB,kBAAC,EAAD,MAClB3N,GACCA,EAASwE,SACT9D,EAAMmL,SACLnL,EAAMqL,aACL,kBAACpE,EAAA,EAAUrD,KAAX,KACE,kBAAC+D,EAAA,EAAD,CACEvJ,KAAK,SACLkF,UAAU,gBACVO,QAtJG,WACrBvC,EH0DwB,SAACtB,GAAD,8CAAW,WAAOsB,EAAUI,GAAjB,yBAAAC,EAAA,sEAEnCL,EAAS,CACPlD,KjB7H+B,0BiB0HE,EAQ/BsD,IADWpC,EAPoB,EAOjCD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZH,SAgBZC,IAAMyI,IAAN,sBACNzK,EAAM0E,IADA,YAErB,GACA9C,GAnBiC,gBAgB3BM,EAhB2B,EAgB3BA,KAMRZ,EAAS,CACPlD,KjBhJ+B,wBiBiJ/BE,QAAS4D,IAxBwB,kDA+BnB,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KjB3J4B,qBiB4J5BE,QAAS6D,IApCwB,0DAAX,wDG1DfwM,CAAa3O,MAkJN,4BC5IL4O,GAnFS,WAAM,IAEnBtM,EAAQC,cAARD,KACHhB,EAAWkB,cAEX3C,EAAW4C,aAAY,SAACxE,GAAD,OAAWA,EAAM4B,YACtCxB,EAA0BwB,EAA1BxB,QAASE,EAAiBsB,EAAjBtB,MAAOuB,EAAUD,EAAVC,MAGhBR,EADUmD,aAAY,SAACxE,GAAD,OAAWA,EAAMoB,aACvCC,SAIR4G,qBAAU,WACJ5G,GAAYA,EAASwE,QACvBxC,EpBmKmB,uCAAM,WAAOA,EAAUI,GAAjB,yBAAAC,EAAA,sEAE3BL,EAAS,CACPlD,KH3K2B,sBGwKF,EAQvBsD,IADWpC,EAPY,EAOzBD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZX,SAgBJC,IAAMC,IAAN,aAAwBL,GAhBpB,gBAgBnBM,EAhBmB,EAgBnBA,KAERZ,EAAS,CACPlD,KH1L2B,oBG2L3BE,QAAS4D,IApBgB,kDA2BX,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KHrMwB,iBGsMxBE,QAAS6D,IAhCgB,0DAAN,yDoBjKnBG,EAAK,YAEN,CAAChB,EAAUgB,EAAMhD,IAEpB,IAAMuP,EAAgB,SAACpN,GACjBsM,OAAOe,QAAQ,mBACjBxN,EpBgMoB,SAACG,GAAD,8CAAQ,WAAOH,EAAUI,GAAjB,qBAAAC,EAAA,sEAE9BL,EAAS,CACPlD,KH3M6B,wBGwMD,EAQ1BsD,IADWpC,EAPe,EAO5BD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZR,SAgBxBC,IAAM+M,OAAN,qBAA2BtN,GAAMG,GAhBT,OAkB9BN,EAAS,CAAElD,KHzNoB,wBGuMD,gDAwBd,kCAJV+D,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KHlO0B,mBGmO1BE,QAAS6D,IA7BmB,yDAAR,wDoBhMX6M,CAAWvN,KAIxB,OACE,oCACE,qCACCpD,EACC,kBAAC,EAAD,MACEE,EACF,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAE3B,kBAACoM,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAEzH,UAAU,oBAClD,+BACE,4BACE,kCACA,oCACA,qCACA,wBAAIA,UAAU,eAAd,SACA,+BAGJ,+BACGxD,EAAMZ,KAAI,SAACO,GAAD,OACT,wBAAI0G,IAAK1G,EAAKiF,KACZ,4BAAKjF,EAAKiF,KACV,4BAAKjF,EAAKkE,MACV,4BACE,uBAAGH,KAAI,iBAAY/D,EAAKyJ,QAAUzJ,EAAKyJ,QAEzC,wBAAI5F,UAAU,eACX7D,EAAKqE,QACJ,uBAAGR,UAAU,eAAegB,MAAO,CAAED,MAAO,WAE5C,uBAAGf,UAAU,eAAegB,MAAO,CAAED,MAAO,UAGhD,wBAAIf,UAAU,eACZ,kBAAC,gBAAD,CAAeN,GAAE,sBAAiBvD,EAAKiF,IAAtB,UACf,kBAACiD,EAAA,EAAD,CAAQ/E,QAAQ,QAAQU,UAAU,UAChC,uBAAGA,UAAU,kBAGjB,kBAACqE,EAAA,EAAD,CACE/E,QAAQ,SACRU,UAAU,SACVO,QAAS,kBAAMgL,EAAcpP,EAAKiF,OAElC,uBAAGpB,UAAU,2BCtElB2L,GARW,WACxB,OACE,+BCoGWC,GA9FQ,WAAO,IACrBzN,EAAMmF,cAANnF,GACAa,EAAQC,cAARD,KAFoB,EAIHmE,mBAAS,IAJN,mBAIpB9C,EAJoB,KAIdsG,EAJc,OAKDxD,mBAAS,IALR,mBAKpByC,EALoB,KAKbC,EALa,OAMG1C,oBAAS,GANZ,mBAMpB3C,EANoB,KAMXqL,EANW,KAQrB7N,EAAWkB,cAEXhD,EAAciD,aAAY,SAACxE,GAAD,OAAWA,EAAMuB,eACzCnB,EAAyBmB,EAAzBnB,QAASE,EAAgBiB,EAAhBjB,MAAOkB,EAASD,EAATC,KAElBG,EAAa6C,aAAY,SAACxE,GAAD,OAAWA,EAAM2B,cAErCwP,EAGPxP,EAHFvB,QACOgR,EAELzP,EAFFrB,MACS+Q,EACP1P,EADFD,QAGFuG,qBAAU,WACJoJ,GACFhO,EAAS,CAAElD,KzBDgB,sByBE3BkE,EAAK,qBAEA7C,EAAKkE,MAAQlE,EAAKiF,MAAQjD,GAG7BwI,EAAQxK,EAAKkE,MACbwF,EAAS1J,EAAKyJ,OACdiG,EAAW1P,EAAKqE,UAJhBxC,EAASE,EAAeC,MAO3B,CAACH,EAAUgB,EAAMb,EAAIhC,EAAM6P,IAO9B,OACE,oCACE,kBAAC,OAAD,CAAMtM,GAAG,mBAAmBM,UAAU,sBAAtC,WAGA,kBAAC,GAAD,KACE,yCACC8L,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASzM,QAAQ,UAAUyM,GAC1ChR,EACC,kBAAC,EAAD,MACEE,EACF,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAE3B,kBAAC6I,EAAA,EAAD,CAAMmC,SAnBQ,SAAChC,GACrBA,EAAEiC,iBACFlI,EtBmNsB,SAAC7B,GAAD,8CAAU,WAAO6B,EAAUI,GAAjB,yBAAAC,EAAA,sEAEhCL,EAAS,CACPlD,KHzO6B,wBGsOC,EAQ5BsD,IADWpC,EAPiB,EAO9BD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAbN,SAiBTC,IAAMyI,IAAN,qBAAwBhL,EAAKiF,KAAOjF,EAAMmC,GAjBjC,gBAiBxBM,EAjBwB,EAiBxBA,KAERZ,EAAS,CAAElD,KHxPoB,wBG0P/BkD,EAAS,CAAElD,KH7QqB,uBG6QOE,QAAS4D,IArBhB,kDA2BhB,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KHnQ0B,mBGoQ1BE,QAAS6D,IAhCqB,0DAAV,wDsBnNboN,CAAW,CAAE7K,IAAKjD,EAAIkC,OAAMuF,QAAOpF,eAkBpC,kBAACsD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,QACpB,kBAACxC,EAAA,EAAKyC,MAAN,aACA,kBAACzC,EAAA,EAAKC,QAAN,CACEjJ,KAAK,OACL0L,YAAY,aACZ3F,MAAOR,EACP2D,SAAU,SAACC,GAAD,OAAO0C,EAAQ1C,EAAEC,OAAOrD,WAItC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,SACpB,kBAACxC,EAAA,EAAKyC,MAAN,sBACA,kBAACzC,EAAA,EAAKC,QAAN,CACEjJ,KAAK,QACL0L,YAAY,cACZ3F,MAAO+E,EACP5B,SAAU,SAACC,GAAD,OAAO4B,EAAS5B,EAAEC,OAAOrD,WAIvC,kBAACiD,EAAA,EAAKuC,MAAN,CAAYC,UAAU,WACpB,kBAACxC,EAAA,EAAKoI,MAAN,CACEpR,KAAK,WACLqR,MAAM,WACNC,QAAS5L,EACTwD,SAAU,SAACC,GAAD,OAAO4H,EAAW5H,EAAEC,OAAOkI,aAIzC,kBAAC/H,EAAA,EAAD,CAAQvJ,KAAK,SAASwE,QAAQ,WAA9B,cC1CG+M,I,OA5CO,WAAM,IAEnBrN,EAASC,cAATD,KAEAzD,EADK4D,aAAY,SAACxE,GAAD,OAAWA,EAAMU,QAClCE,gBAEFyC,EAAWkB,cAEZ3D,GACJyD,EAAK,UATqB,MAWemE,mBAAS,UAXxB,mBAWpBrH,EAXoB,KAWLwQ,EAXK,KAiB3B,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAepE,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAACtE,EAAA,EAAD,CAAMmC,SATc,SAAChC,GbcS,IAACrF,EabhCqF,EAAEiC,iBACFlI,GbYgCY,EaZL9C,EbYc,SAACkC,GACxCA,EAAS,CACPlD,KfjCkC,gCekClCE,QAAS4D,IAGXzB,aAAaqH,QAAQ,gBAAiBnH,KAAKoH,UAAU7F,OajBvDI,EAAK,gCAOF,kBAAC8E,EAAA,EAAKuC,MAAN,KACA,kBAACvC,EAAA,EAAKyC,MAAN,CAAY7E,GAAG,UAAf,iBACD,kBAACf,EAAA,EAAD,KACE,kBAACmD,EAAA,EAAKoI,MAAN,CACDpR,KAAK,QACLqR,MAAM,wBACNhO,GAAG,SACHkC,KAAK,gBACLQ,MAAM,SACNuL,SAAO,EACPpI,SAAU,SAACC,GAAD,OAAOqI,EAAiBrI,EAAEC,OAAOrD,YAI5C,kBAACwD,EAAA,EAAD,CAAQvJ,KAAK,SAASwE,QAAQ,WAA9B,gBC0HWiN,GA7JU,WAAM,IAEtBvN,EAAQC,cAARD,KACDhB,EAAWkB,cACX7D,EAAO8D,aAAY,SAACxE,GAAD,OAAWA,EAAMU,QAErCmR,EAAc,SAACrD,GACpB,OAAQW,KAAKC,MAAY,IAANZ,GAAa,KAAK3D,QAAQ,IAG/CnK,EAAKwO,WAAa2C,EAChBnR,EAAKC,UAAU+J,QAAO,SAACC,EAAK9J,GAAN,OAAe8J,EAAM9J,EAAKsG,MAAQtG,EAAK4H,MAAK,IAEpE/H,EAAKuP,cAAgB4B,EAAYnR,EAAKwO,WAAa,IAAM,EAAI,KAC7DxO,EAAKwP,SAAW2B,EAAYzH,QAAQ,IAAO1J,EAAKwO,YAAYrE,QAAQ,KACpEnK,EAAKuM,YACH7C,OAAO1J,EAAKwO,YACZ9E,OAAO1J,EAAKuP,eACZ7F,OAAO1J,EAAKwP,WACZrF,QAAQ,GAEV,IAAM/I,EAAc0C,aAAY,SAACxE,GAAD,OAAWA,EAAM8B,eACzCC,EAAyBD,EAAzBC,MAAOL,EAAkBI,EAAlBJ,QAAQpB,EAAUwB,EAAVxB,MAEvB2H,qBAAU,WACJvG,GACF2C,EAAK,UAAD,OAAWtC,EAAM0E,QAGtB,CAACpC,EAAM3C,IAeT,OACC,oCACC,kBAAC,GAAD,CAAe6L,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,kBAAC3H,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACR,kBAACY,EAAA,EAAD,CAAWrE,QAAQ,SAClB,kBAACqE,EAAA,EAAUrD,KAAX,KACC,wCACA,2BAAG,6CAA0B,6BAC3BjF,EAAKE,gBAAgBgN,QAAQ,6BAC7BlN,EAAKE,gBAAgBoN,SAAS,6BAC9BtN,EAAKE,gBAAgBkN,KAAK,6BAC1BpN,EAAKE,gBAAgBsN,UAGxB,kBAAClF,EAAA,EAAUrD,KAAX,KACC,8CACA,2BACC,4CACCjF,EAAKS,eAEA,kBAACuI,EAAA,EAAD,CAAQ9D,QAAS,kBAAKvB,EAAK,cAA3B,WAER,kBAAC2E,EAAA,EAAUrD,KAAX,KACC,2CAC2B,IAA1BjF,EAAKC,UAAU6J,OACf,kBAAC,EAAD,2BAEA,kBAACxB,EAAA,EAAD,CAAWrE,QAAQ,SACjBjE,EAAKC,UAAUM,KAAI,SAACJ,EAAMmP,GAAP,OACnB,kBAAChH,EAAA,EAAUrD,KAAX,CAAgBuC,IAAK8H,GACpB,kBAACjK,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKoC,GAAI,GACR,kBAACS,EAAA,EAAD,CACClC,IAAK9F,EAAK+F,MACVkC,IAAKjI,EAAK6E,KACVqD,OAAK,EACL0B,SAAO,KAGT,kBAACzE,EAAA,EAAD,KACC,kBAAC,OAAD,CAAMjB,GAAE,mBAAclE,EAAKL,UACzBK,EAAK6E,OAGR,kBAACM,EAAA,EAAD,CAAKoC,GAAI,GACR,kBAACrC,EAAA,EAAD,KACC,yCAAYlF,EAAKsG,OAAgB,KAElC,kBAACpB,EAAA,EAAD,KACC,2BACC,wCADD,IACwBlF,EAAK4H,MAG9B,kBAAC1C,EAAA,EAAD,KACC,2BACC,+CAAkBlF,EAAK4H,IAAM5H,EAAKsG,mBAY7C,kBAACnB,EAAA,EAAD,KACC,kBAACQ,EAAA,EAAD,KACO,kBAACwC,EAAA,EAAD,CAAWrE,QAAQ,SACX,kBAACqE,EAAA,EAAUrD,KAAX,KACE,8CAEF,kBAACqD,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,aAAQtF,EAAKwO,cAGjB,kBAAClG,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,aAAQtF,EAAKuP,iBAGjB,kBAACjH,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,aAAQtF,EAAKwP,YAGjB,kBAAClH,EAAA,EAAUrD,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,aAAQtF,EAAKuM,cAG/B3M,GAAS,kBAAC0I,EAAA,EAAUrD,KAAX,KAAgB,kBAAC,EAAD,CAAShB,QAAQ,UAAUrE,IAEtC,kBAAC0I,EAAA,EAAUrD,KAAX,KACG,kBAAC+D,EAAA,EAAD,CAAQvJ,KAAK,SAASkF,UAAU,YAAYsE,SAA6B,IAAnBjJ,EAAKC,UAAgCiF,QAnHtF,WACxBvC,ERhBuB,SAACtB,GAAD,8CAAW,WAAOsB,EAAUI,GAAjB,yBAAAC,EAAA,sEAElCL,EAAS,CACPlD,KjB3B8B,yBiBwBE,EAQ9BsD,IADWpC,EAPmB,EAOhCD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAbJ,SAiBXC,IAAMyH,KAAN,cAA0BzJ,EAAO4B,GAjBtB,gBAiB1BM,EAjB0B,EAiB1BA,KAERZ,EAAS,CACPlD,KjB3C8B,uBiB4C9BE,QAAS4D,IArBuB,kDA4BlB,kCAJVC,EACJ,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAClC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAEVb,EAASD,KAEXC,EAAS,CACPlD,KjBtD2B,oBiBuD3BE,QAAS6D,IAjCuB,0DAAX,wDQiBrB4N,CAAY,CACV7P,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpB+N,WAAYxO,EAAKwO,WACjBe,cAAevP,EAAKuP,cACpBC,SAAUxP,EAAKwP,SACfjD,WAAYvM,EAAKuM,gBA0GF,sBC7ER8E,OAtDf,WACC,OACC,kBAAC,gBAAD,KACC,kBAAC,EAAD,MACA,0BAAM1M,UAAU,QACf,kBAACP,EAAA,EAAD,KACC,kBAAC,IAAD,CAAOkN,KAAK,cACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,eACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,YACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,aACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,oBACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,wBAAwB,kBAAC,GAAD,OAEpC,kBAAC,IAAD,CAAOA,KAAK,qBACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,uBACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,YACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,aACX,kBAACC,GAAD,OAED,kBAAC,IAAD,CAAOD,KAAK,UACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,gBACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,cACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,IAAIE,OAAK,GACpB,kBAAC,EAAD,SAIH,kBAAC,EAAD,QC5DiBC,QACW,cAA7BrC,OAAO9F,SAASoI,UAEe,UAA7BtC,OAAO9F,SAASoI,UAEhBtC,OAAO9F,SAASoI,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,CAAUvP,MAAOA,GACf,kBAAC,GAAD,OAEFwM,SAASgD,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzS,GACLiQ,QAAQjQ,MAAMA,EAAM4D,a","file":"static/js/main.badc569e.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer} from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer,userListReducer,userUpdateReducer } from './reducers/userReducers'\nimport {orderCreateReducer,orderDeliverReducer,orderDetailsReducer,orderListMyReducer,orderListReducer,orderPayReducer} from './reducers/orderReducers'\nconst reducer = combineReducers({\n\tproductList: productListReducer,\n\tproductDetails: productDetailsReducer,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\tuserDetails: userDetailsReducer,\n\tuserUpdateProfile: userUpdateProfileReducer,\n\tuserUpdate: userUpdateReducer,\n\tuserList: userListReducer,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderDeliver: orderDeliverReducer,\n\torderListMy: orderListMyReducer,\n\torderList: orderListReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst loginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n\tcart: { cartItems: cartItemsFromStorage,\n\t\tshippingAddress: shippingAddressFromStorage },\n\tuserLogin: { userInfo: loginFromStorage },\n\t\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n","import {PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_FAIL} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n      case PRODUCT_LIST_REQUEST:\n        return { loading: true, products: [] }\n      case PRODUCT_LIST_SUCCESS:\n        return {\n          loading: false,\n          products: action.payload,\n          \n        }\n      case PRODUCT_LIST_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n  }\n  export const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n","import { CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PEYMENT_METHOD } from '../constants/cartConstants'\n\nexport const cartReducer = (\n    state = { cartItems: [], shippingAddress: {} },\n    action\n  ) => {\n    switch (action.type) {\n      case CART_ADD_ITEM:\n        const item = action.payload\n  \n        const existItem = state.cartItems.find((x) => x.product === item.product)\n  \n        if (existItem) {\n          return {\n            ...state,\n            cartItems: state.cartItems.map((x) =>\n              x.product === existItem.product ? item : x\n            ),\n          }\n        } else {\n          return {\n            ...state,\n            cartItems: [...state.cartItems, item],\n          }\n        }\n      case CART_REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n        }\n\n      case CART_SAVE_SHIPPING_ADDRESS:\n        return {\n          ...state,\n          shippingAddress: action.payload\n        }\n      case CART_SAVE_PEYMENT_METHOD:\n        return {\n          ...state,\n          paymentMethod: action.payload\n        }\n      \n      \n      default:\n        return state\n    }\n  }","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PEYMENT_METHOD = 'CART_SAVE_SAVE_PAYMENT_METHOD'\n\n","import {\n\tUSER_DETAILS_FAIL,\n\tUSER_DETAILS_REQUEST,\n\tUSER_DETAILS_RESET,\n\tUSER_DETAILS_SUCCESS,\n\tUSER_LIST_REQUEST,\n\tUSER_LIST_SUCCESS,\n\tUSER_LIST_FAIL,\n\tUSER_LIST_RESET,\n\tUSER_LOGIN_FAIL,\n\tUSER_LOGIN_REQUEST,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGOUT,\n\tUSER_REGISTER_FAIL,\n\tUSER_REGISTER_REQUEST,\n\tUSER_REGISTER_SUCCESS,\n\tUSER_UPDATE_PROFILE_FAIL,\n\tUSER_UPDATE_PROFILE_REQUEST,\n\tUSER_UPDATE_PROFILE_SUCCESS,\n\tUSER_DELETE_REQUEST,\n\tUSER_DELETE_SUCCESS,\n\tUSER_DELETE_FAIL,\n\tUSER_UPDATE_RESET,\n\tUSER_UPDATE_REQUEST,\n\tUSER_UPDATE_SUCCESS,\n\tUSER_UPDATE_FAIL,\n  } from '../constants/userConstants'\n  \n  export const userLoginReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t  case USER_LOGIN_REQUEST:\n\t\treturn { loading: true }\n\t  case USER_LOGIN_SUCCESS:\n\t\treturn { loading: false, userInfo: action.payload }\n\t  case USER_LOGIN_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  case USER_LOGOUT:\n\t\treturn {}\n\t  default:\n\t\treturn state\n\t}\n  }\n  \n  export const userRegisterReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t  case USER_REGISTER_REQUEST:\n\t\treturn { loading: true }\n\t  case USER_REGISTER_SUCCESS:\n\t\treturn { loading: false, userInfo: action.payload }\n\t  case USER_REGISTER_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  default:\n\t\treturn state\n\t}\n  }\n  \n  export const userDetailsReducer = (state = { user: {} }, action) => {\n\tswitch (action.type) {\n\t  case USER_DETAILS_REQUEST:\n\t\treturn { ...state, loading: true }\n\t  case USER_DETAILS_SUCCESS:\n\t\treturn { loading: false, user: action.payload }\n\t  case USER_DETAILS_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  case USER_DETAILS_RESET:\n\t\treturn { user: {} }\n\t  default:\n\t\treturn state\n\t}\n  }\n  \n  export const userUpdateProfileReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t  case USER_UPDATE_PROFILE_REQUEST:\n\t\treturn { loading: true }\n\t  case USER_UPDATE_PROFILE_SUCCESS:\n\t\treturn { loading: false, success: true, userInfo: action.payload }\n\t  case USER_UPDATE_PROFILE_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  default:\n\t\treturn state\n\t}\n  }\n  \n  export const userListReducer = (state = { users: [] }, action) => {\n\tswitch (action.type) {\n\t  case USER_LIST_REQUEST:\n\t\treturn { loading: true }\n\t  case USER_LIST_SUCCESS:\n\t\treturn { loading: false, users: action.payload }\n\t  case USER_LIST_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  case USER_LIST_RESET:\n\t\treturn { users: [] }\n\t  default:\n\t\treturn state\n\t}\n  }\n  \n  export const userDeleteReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t  case USER_DELETE_REQUEST:\n\t\treturn { loading: true }\n\t  case USER_DELETE_SUCCESS:\n\t\treturn { loading: false, success: true }\n\t  case USER_DELETE_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  default:\n\t\treturn state\n\t}\n  }\n  \n  export const userUpdateReducer = (state = { user: {} }, action) => {\n\tswitch (action.type) {\n\t  case USER_UPDATE_REQUEST:\n\t\treturn { loading: true }\n\t  case USER_UPDATE_SUCCESS:\n\t\treturn { loading: false, success: true }\n\t  case USER_UPDATE_FAIL:\n\t\treturn { loading: false, error: action.payload }\n\t  case USER_UPDATE_RESET:\n\t\treturn {\n\t\t  user: {},\n\t\t}\n\t  default:\n\t\treturn state\n\t}\n  }\n  ","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\n//Style\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../actions/userAction'\nimport {useHistory} from 'react-router-dom'\n\nconst Header = () => {\n\t//Router Hooks\n\tconst {push} =useHistory()\n\tconst dispatch = useDispatch()\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { userInfo } = userLogin\n\tconst logoutHnadler = () => {\n\t\tdispatch(logout())\n\t\tpush('/login')\n\t}\n\treturn (\n\t\t<header>\n\t\t\t<Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n\t\t\t\t<Container>\n\t\t\t\t\t<LinkContainer to='/'>\n\t\t\t\t\t\t<Navbar.Brand>DELETE</Navbar.Brand>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\n\t\t\t\t\t\t<Nav className='ml-auto'>\n\t\t\t\t\t\t\t<LinkContainer to='/cart'>\n\t\t\t\t\t\t\t\t<Nav.Link href='/cart'>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-shopping-cart'></i> Cart\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t{userInfo ? (\n\t\t\t\t\t\t\t\t<NavDropdown title={userInfo.name} id='username'>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/profile'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={logoutHnadler}>Log Out</NavDropdown.Item>\n\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LinkContainer to='/login'>\n\t\t\t\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-user'></i> Sign in\n\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{userInfo && userInfo.isAdmin && (\n\t\t\t\t\t\t\t\t<NavDropdown title='Admin' id='adminmenu'>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/userslist'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Users</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/productslist'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Products</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/orderslist'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Orders</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React from 'react'\n//Style\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">&copy; Delete by Juraj Basanda</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text,color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i style={{color}}\n          className={\n            value >= 1\n              ? `fas fa-star`\n              : value <= 0.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 2\n              ? `fas fa-star`\n              : value <= 1.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 3\n              ? `fas fa-star`\n              : value <= 2.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 4\n              ? `fas fa-star`\n              : value <= 3.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span>\n        <i style={{color}}\n          className={\n            value >= 5\n              ? `fas fa-star`\n              : value <= 4.5\n              ? `fas fa-star-half-alt`\n              : `far fa-star`\n          }\n        ></i>\n      </span>\n      <span> {text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n    color:'rgb(241, 210, 40)'\n}\n\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"mu-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Title as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          ></Rating>\n        </Card.Title>\n\n        <Card.Text as=\"h3\">£{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport { listProducts } from '../../actions/productActions'\nimport Product from '../Product'\nimport Message from '../Message'\nimport Loader from '../Loader'\n\nconst HomeScreen = props => {\n\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n  useEffect(() => {\n    dispatch(listProducts())\n\n  }, [dispatch])\n\n\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (<Message variant={error}>{error}</Message>)\n          : (\n            <>\n              <Row>\n                {products.map((product) => (\n                  <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product} />\n                  </Col>\n                ))}\n              </Row>\n            </>\n          )}\n\n    </>\n  )\n}\n\nexport default HomeScreen\n","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST,PRODUCT_DETAILS_FAIL,PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS } from '../constants/productConstants'\nimport axios from 'axios'\n\nexport const listProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get(`/api/products`)\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n          type: PRODUCT_LIST_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        })\n      }\n\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button, Form\n} from 'react-bootstrap'\nimport Rating from '../Rating'\nimport { listProductDetails } from '../../actions/productActions'\nimport Loader from '../Loader'\nimport Message from '../Message'\n\nconst ProductScreen = () => {\n  //Router hooks\n  const [qty, setQty] = useState(1)\n  const { push } = useHistory()\n  const { id } = useParams()\n  //Use redux\n  const dispatch = useDispatch()\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  useEffect(() => {\n    dispatch(listProductDetails(id))\n  }, [id, dispatch]);\n  //Get product and go to Cart\n  const addToCartHandler = () => {\n    push(`/cart/${id}?qty=${qty}`)\n  }\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to={`/`}>\n        Go Back\n      </Link>\n      {loading ? <Loader></Loader> : error ? <Message variant=\"danger\"></Message> : (<Row>\n        <Col md=\"6\">\n          <Image src={product.image} alt={product.name} fluid />\n        </Col>\n        <Col md=\"3\">\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>{product.name}</h2>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                value={product.rating}\n                text={`${product.numReviews} reviews`}\n              ></Rating>\n            </ListGroup.Item>\n            <ListGroup.Item>Price: £ {product.price}</ListGroup.Item>\n            <ListGroup.Item>{product.description}</ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price:</Col>\n                  <Col>\n                    <strong>£ {product.price}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Status:</Col>\n                  <Col>\n                    <strong>{product.countInStock > 0 ? `In Stock` : `Sold Out`}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              {product.countInStock > 0 && (\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Qty</Col>\n                    <Col>\n                      <Form.Control\n                        as='select'\n                        value={qty}\n                        onChange={(e) => setQty(e.target.value)}\n                      >\n                        {[...Array(product.countInStock).keys()].map(\n                          (x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          )\n                        )}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block '\n                      disabled={true ? product.countInStock === 0 : false}>ADD TO CART</Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n       \n      </Row>)}\n\n    </>\n  )\n}\n\nexport default ProductScreen\n","import { CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PEYMENT_METHOD } from '../constants/cartConstants'\nimport axios from 'axios'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n      type: CART_REMOVE_ITEM,\n      payload: id,\n    })\n  \n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n  }\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n      type: CART_SAVE_SHIPPING_ADDRESS,\n      payload: data,\n    })\n  \n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n  }\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n      type: CART_SAVE_PEYMENT_METHOD,\n      payload: data,\n    })\n  \n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n  }","import React, { useEffect } from 'react'\nimport { Link, useHistory, useLocation, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Card, Col, Image, Form, ListGroup, Button } from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../../actions/cartActions'\nimport Message from '../Message'\n\nconst CartScreen = () => {\n  //Router hooks\n  const { id } = useParams()\n  const location = useLocation()\n  const history = useHistory()\n  //Get qty\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n  //Use redux\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (id) {\n      dispatch(addToCart(id, qty))\n    }\n  }, [id, dispatch, qty])\n  //Remove product from cart\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n  //Go to login or shipping\n  const checkoutHandler = () => {\n    history.push(`/login?redirect=shipping`)\n  }\n  return <Row>\n    <Col md={8}>\n      <h1>Shopping Cart</h1>\n      {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go back</Link></Message>\n        : (<ListGroup variant='flush'>\n          {cartItems.map(item => (<ListGroup.Item key={item.product}>\n            <Row>\n              <Col md={2}>\n                <Image src={item.image} alt={item.name} fluid rounded />\n              </Col><Col md={3}>\n                <Link to={`/product/${item.product}`}>{item.name}</Link>\n              </Col>\n              <Col md={2}>£ {item.price}</Col>\n              <Col md={2}>\n                <Form.Control\n                  as='select'\n                  value={item.qty}\n                  onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                >\n                  {[...Array(item.countInStock).keys()].map(\n                    (x) => (\n                      <option key={x + 1} value={x + 1}>\n                        {x + 1}\n                      </option>\n                    )\n                  )}\n                </Form.Control>\n              </Col>\n              <Col md={2}>\n                <Button type=\"button\" variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                  <i className=\"fas fa-trash\"></i>\n                </Button>\n              </Col>\n            </Row>\n          </ListGroup.Item>))}\n        </ListGroup>)}\n    </Col>\n    <Col><Card><ListGroup variant='flush'>\n      <ListGroup.Item>\n        <h2>Subtotal ({cartItems.reduce((acc, current) => acc + current.qty, 0)}) Items</h2>\n                    £ {cartItems.reduce((acc, current) => acc + current.qty * current.price, 0).toFixed(2)}\n      </ListGroup.Item>\n      <ListGroup.Item>\n        <Button type='button' className='btn-block' disabled={true ? cartItems === 0 : false} onClick={checkoutHandler}>\n          Checkout\n                    </Button>\n      </ListGroup.Item>\n    </ListGroup>\n    </Card></Col>\n  </Row>\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Col, Row } from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Row className='justify-content-md-center'>\n\t\t\t\t<Col xs={12} md={6}>\n\t\t\t\t\t{children}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { login } from '../../actions/userAction'\n\nconst LoginScreen = () => {\n\t//Router Hooks\n\tconst { search } = useLocation()\n\tconst { push } = useHistory()\n\t//State\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst dispatch = useDispatch()\n\n\tconst userLogin = useSelector((state) => state.userLogin)\n\tconst { loading, error, userInfo } = userLogin\n\n\tconst redirect = search ? search.split('=')[1] : '/'\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tpush(redirect)\n\t\t}\n\t}, [push, userInfo, redirect])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(login(email, password))\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Sign In</h1>\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tSign In\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t\t<Row className='py-3'>\n\t\t\t\t<Col>\n\t\t\t\t\tNot Registered yet ?{' '}\n\t\t\t\t\t<Link to={redirect ? `/register?redirect=${redirect}` : `/register`} style={{ color: '#284a6c' }}>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Link>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</FormContainer>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport {  useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { register } from '../../actions/userAction'\n\nconst RgisterScreen = () => {\n\t//Router Hooks\n\tconst { search } = useLocation()\n\tconst { push } = useHistory()\n\t//State\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\n\tconst userRegister = useSelector((state) => state.userRegister)\n\tconst { loading, error, userInfo } = userRegister\n\n\tconst redirect = search ? search.split('=')[1] : '/'\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tpush(redirect)\n\t\t}\n\t}, [push, userInfo, redirect])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tif (password === confirmPassword) {\n\t\t\tdispatch(register(name, email, password))\n\t\t} else {\n\t\t\tsetMessage('Password do not match')\n\t\t}\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tRegister\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default RgisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport { getUserDetails, updateUserProfile } from '../../actions/userAction'\nimport { listMyOrders } from '../../actions/orderActions'\n\nconst ProfileScreen = () => {\n\t//Router Hooks\n\tconst { push } = useHistory()\n\t//State\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [message, setMessage] = useState(null)\n\n\tconst dispatch = useDispatch()\n\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { loading, error, user } = userDetails\n\tconst userLogin = useSelector((state) => state.userDetails)\n\tconst { userInfo } = userLogin\n\tconst userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n\tconst { success } = userUpdateProfile\n\tconst orderListMy = useSelector((state) => state.orderListMy)\n\tconst { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\tuseEffect(() => {\n\t\tif (!user) {\n\t\t\tpush('/login')\n\t\t} else {\n\t\t\tif (!user || !user.name) {\n\t\t\t\tdispatch(getUserDetails('profile'))\n\t\t\t\tdispatch(listMyOrders())\n\t\t\t} else {\n\t\t\t\tsetName(user.name)\n\t\t\t\tsetEmail(user.email)\n\t\t\t}\n\t\t}\n\t}, [dispatch, push, userInfo, user])\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tif (password !== confirmPassword) {\n\t\t\tsetMessage('Passwords do not match')\n\t\t} else {\n\t\t\tdispatch(updateUserProfile({ id: user._id, name, email, password }))\n\t\t}\n\t}\n\treturn (\n\t\t<Row>\n\t\t\t<Col md={3}>\n\t\t\t\t<h2>User Profile</h2>\n\t\t\t\t{message && <Message variant='danger'>{message}</Message>}\n\t\t\t\t{success && <Message variant='success'>Profile Updated</Message>}\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t\t{loading && <Loader />}\n\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Col>\n\t\t\t<Col md={9}>\n\t\t\t\t<h2>My Orders</h2>\n\t\t\t\t{loadingOrders ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : errorOrders ? (\n\t\t\t\t\t<Message variant='danger'>{errorOrders}</Message>\n\t\t\t\t) : (\n\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t\t\t<th>DATE</th>\n\t\t\t\t\t\t\t\t<th>TOTAL</th>\n\t\t\t\t\t\t\t\t<th>PAID</th>\n\t\t\t\t\t\t\t\t<th>DELIVERED</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{orders.map((order) => (\n\t\t\t\t\t\t\t\t<tr key={order._id}>\n\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\n\t\t\t\t\t\t\t\t\t<td>{order.createdAt.substring(0, 10)}</td>\n\t\t\t\t\t\t\t\t\t<td>{order.totalPrice}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{order.isPaid ? (\n\t\t\t\t\t\t\t\t\t\t\torder.paidAt.substring(0, 10)\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{ color: 'red' }}></i>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{order.isDelivered ? (\n\t\t\t\t\t\t\t\t\t\t\torder.deliveredAt.substring(0, 10)\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{ color: 'red' }}></i>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-sm' variant='light'>\n\t\t\t\t\t\t\t\t\t\t\t\tDetails\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  \n} from '../constants/orderConstants'\nimport { logout } from './userAction'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react';\nimport {Nav} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n      {step1 ? (\n            <LinkContainer to='/login'>\n            <Nav.Link><i className=\"fas fa-check\"></i> Sign In</Nav.Link>\n            </LinkContainer>\n        ):(<Nav.Link disabled>Sign In</Nav.Link>)}\n      </Nav.Item>\n      <Nav.Item>\n      {step2 ? (\n            <LinkContainer to='/shipping'>\n            <Nav.Link><i className=\"fas fa-check\"></i> Shipping</Nav.Link>\n            </LinkContainer>\n        ):(<Nav.Link disabled>Shipping</Nav.Link>)}\n      </Nav.Item>\n      <Nav.Item>\n      {step3 ? (\n            <LinkContainer to='/payment'>\n            <Nav.Link><i className=\"fas fa-check\"></i> Payment</Nav.Link>\n            </LinkContainer>\n        ):(<Nav.Link disabled>Payment</Nav.Link>)}\n      </Nav.Item>\n      <Nav.Item>\n      {step4 ? (\n            <LinkContainer to='/placeorder'>\n            <Nav.Link><i className=\"fas fa-check\"></i> Place Order</Nav.Link>\n            </LinkContainer>\n        ):(<Nav.Link disabled>Place Order</Nav.Link>)}\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default CheckoutSteps;\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../FormContainer'\nimport CheckoutSteps from '../CheckoutSteps'\nimport { saveShippingAddress } from '../../actions/cartActions'\n\nconst ShippingScreen = () => {\n\t//Router Hooks\n\tconst { push } = useHistory()\n\tconst cart = useSelector((state) => state.cart)\n\tconst { shippingAddress } = cart\n\n\tconst [address, setAddress] = useState(shippingAddress.address)\n\tconst [city, setCity] = useState(shippingAddress.city)\n\tconst [postCode, setPostCode] = useState(shippingAddress.postCode)\n\tconst [country, setCountry] = useState(shippingAddress.country)\n\tconst dispatch = useDispatch()\n\tconst userDetails = useSelector((state) => state.userDetails)\n\tconst { user } = userDetails\n\n\tif (!user) {\n\t\tpush('/login')\n\t}\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(saveShippingAddress({ address, city, postCode, country }))\n\t\tpush('/login?redirect=payment')\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<CheckoutSteps step1 step2></CheckoutSteps>\n\t\t\t<h1>Shipping</h1>\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='address'>\n\t\t\t\t\t<Form.Label>Adress</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='textarea'\n\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\trows='3'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter address'\n\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='postcode'>\n\t\t\t\t\t<Form.Label>Postcode</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter postcode'\n\t\t\t\t\t\tvalue={postCode}\n\t\t\t\t\t\tonChange={(e) => setPostCode(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='city'>\n\t\t\t\t\t<Form.Label>City</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter city'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId='country'>\n\t\t\t\t\t<Form.Label>Country</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder='Enter country'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type='submit' ariant='primary'>\n\t\t\t\t\tContinue\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link, useHistory,useRouteMatch } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../../constants/orderConstants'\n\nconst OrderScreen = () => {\n    const {push} =useHistory()\n    const {params} = useRouteMatch()\n  const orderId = params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=GBP`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch,push, orderId, successPay, successDeliver, order,userInfo])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order ID: {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong><br/>\n                {order.shippingAddress.address}<br/> \n                {order.shippingAddress.postCode}<br/>\n                {order.shippingAddress.city}<br/>\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='info'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='info'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                    <Row>\n                        <Col md={3}>\n                            <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                            />\n                        </Col>\n                        <Col>\n                            <Link to={`/product/${item.product}`}>\n                                {item.name}\n                            </Link>\n                        </Col>\n                        <Col md={2}>\n                            <Row>\n                                <strong> £ {item.price}</strong>{' '}\n                            </Row>\n                            <Row>\n                                <p>\n                                    <strong>Qty:</strong> {item.qty}\n                                </p>\n                            </Row>\n                            <Row>\n                                <p>\n                                    <strong>Total: £ {item.qty * item.price} </strong>\n                                </p>\n                            </Row>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>£ {order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>£ {order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>£ {order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>£ {order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      currency='GBP'\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport { listUsers, deleteUser } from '../../actions/userAction'\nimport { useHistory } from 'react-router-dom'\n\nconst UsersListScreen = () => {\n    //Router Hooks\n    const {push} = useHistory()\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      push('/login')\n    }\n  }, [dispatch, push, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure ?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive  className='table-sm-center '>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th className='text-center'>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td className='text-center'>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td className='text-center'>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UsersListScreen\n","import React from 'react';\n\nconst ProductListScreen = () => {\n  return (\n    <div>\n      \n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message'\nimport Loader from '../Loader'\nimport FormContainer from '../FormContainer'\nimport { getUserDetails, updateUser } from '../../actions/userAction'\nimport { USER_UPDATE_RESET } from '../../constants/userConstants'\n\nconst UserEditScreen = () => {\n  const {id} = useParams()\n  const {push} = useHistory()\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      push('/admin/userslist')\n    } else {\n      if (!user.name || user._id !== id) {\n        dispatch(getUserDetails(id))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, push, id, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: id, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userslist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button,Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../FormContainer'\nimport CheckoutSteps from '../CheckoutSteps'\nimport { savePaymentMethod } from '../../actions/cartActions'\n\nconst PaymentScreen = () => {\n\t//Router Hooks\n\tconst { push } = useHistory()\n\tconst cart = useSelector((state) => state.cart)\n\tconst { shippingAddress } = cart\n\n\tconst dispatch = useDispatch()\n\n\tif (!shippingAddress) {\n\t\tpush('/login')\n\t}\n\tconst [paymentMethod, setPaymentMethod] = useState('PayPal')\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(savePaymentMethod(paymentMethod))\n\t\tpush('/login?redirect=placeorder')\n\t}\n\treturn (\n\t\t<FormContainer>\n\t\t\t<CheckoutSteps step1 step2 step3></CheckoutSteps>\n\t\t\t<h1>Payment Method</h1>\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t  <Form.Group>\n\t\t\t\t\t<Form.Label as='legend'>Select Method</Form.Label>\n\t\t\t\t<Col>\n\t\t\t\t  <Form.Check\n\t\t\t\t\ttype='radio'\n\t\t\t\t\tlabel='PayPal or Credit Card'\n\t\t\t\t\tid='PayPal'\n\t\t\t\t\tname='paymentMethod'\n\t\t\t\t\tvalue='PayPal'\n\t\t\t\t\tchecked\n\t\t\t\t\tonChange={(e) => setPaymentMethod(e.target.value)}\n\t\t\t\t  ></Form.Check>\n\t\t\t\t</Col>\n\t\t\t</Form.Group>\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tContinue\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link,useHistory } from 'react-router-dom'\nimport Message from '../Message'\nimport CheckoutSteps from '../CheckoutSteps'\nimport { createOrder } from '../../actions/orderActions'\n\n\nconst PlaceOrderScreen = () => {\n  //Redux Hooks\n  const {push} = useHistory()\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n //   Calculate prices\n const addDecimals = (num) => {\n  return (Math.round(num * 100) / 100).toFixed(2)\n}\n\ncart.itemsPrice = addDecimals(\n  cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n)\ncart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\ncart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\ncart.totalPrice = (\n  Number(cart.itemsPrice) +\n  Number(cart.shippingPrice) +\n  Number(cart.taxPrice)\n).toFixed(2)\n\nconst orderCreate = useSelector((state) => state.orderCreate)\nconst { order, success,error } = orderCreate\n\nuseEffect(() => {\n  if (success) {\n    push(`/order/${order._id}`)\n  }\n  // eslint-disable-next-line\n}, [push, success])\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n\treturn (\n\t\t<>\n\t\t\t<CheckoutSteps step1 step2 step3 step4 />\n\t\t\t<Row>\n\t\t\t\t<Col md={8}>\n\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Shipping</h2>\n\t\t\t\t\t\t\t<p><strong>Address: </strong><br/>\n\t\t\t\t\t\t\t\t{cart.shippingAddress.address}<br/> \n\t\t\t\t\t\t\t\t{cart.shippingAddress.postCode}<br/>\n\t\t\t\t\t\t\t\t{cart.shippingAddress.city}<br/>\n\t\t\t\t\t\t\t\t{cart.shippingAddress.country}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Method: </strong>\n\t\t\t\t\t\t\t\t{cart.paymentMethod}\n              </p>\n              <Button onClick={()=> push(`/payment`)}>Change</Button>\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Order Items</h2>\n\t\t\t\t\t\t\t{cart.cartItems.length === 0 ? (\n\t\t\t\t\t\t\t\t<Message>Your cart is empty</Message>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t\t\t{cart.cartItems.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={item.image}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${item.product}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong> £ {item.price}</strong>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>Qty:</strong> {item.qty}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>Total: £ {item.qty * item.price}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Card>\n            <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                      <h2>Order Summery</h2>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Items</Col>\n                        <Col>£ {cart.itemsPrice}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Shipping</Col>\n                        <Col>£ {cart.shippingPrice}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Tax</Col>\n                        <Col>£ {cart.taxPrice}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Total</Col>\n                        <Col>£ {cart.totalPrice}</Col>\n                      </Row>\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t{error && <ListGroup.Item><Message variant='danger'>{error}</Message></ListGroup.Item>}\n\n                    <ListGroup.Item>\n                       <Button type='button' className='btn-block' disabled={cart.cartItems === 0 ? true : false} onClick={placeOrderHandler}>Place Order</Button>\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\n\t\t\t\t\t\n            </ListGroup>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n}\n\nexport default PlaceOrderScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n//Components\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './components/screens/HomeScreen'\nimport ProductScreen from './components/screens/ProductScreen'\nimport CartScreen from './components/screens/CartScreen'\nimport LoginScreen from './components/screens/LoginScreen'\nimport RegisterScreen from './components/screens/RegisterScreen'\nimport ProfileScreen from './components/screens/ProfileScreen'\nimport ShippingScreen from './components/screens/ShippingScreen'\nimport OrderScreen from './components/screens/OrderScreens'\nimport UsersListScreen from './components/screens/UsersListScreen'\nimport ProductListScreen from './components/screens/ProductListScreen'\nimport UserEditScreen from './components/screens/UserEditScreen'\n\n//Style\nimport { Container } from 'react-bootstrap'\nimport './App.css'\nimport PaymentScreen from './components/screens/PaymentScreen'\nimport PlaceOrderScreen from './components/screens/PlaceOrderScreen'\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Header />\n\t\t\t<main className='py-3'>\n\t\t\t\t<Container>\n\t\t\t\t\t<Route path='/order/:id' >\n\t\t\t\t\t\t<OrderScreen/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/placeorder' >\n\t\t\t\t\t\t<PlaceOrderScreen/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/payment' >\n\t\t\t\t\t\t<PaymentScreen/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/shipping' >\n\t\t\t\t\t\t<ShippingScreen/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/admin/userslist' >\n\t\t\t\t\t\t<UsersListScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/admin/user/:id/edit' ><UserEditScreen/></Route>\n\n\t\t\t\t\t<Route path='/admin/orderslist' >\n\t\t\t\t\t\t<ProductListScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/admin/productslist' >\n\t\t\t\t\t\t<ProductListScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/profile' >\n\t\t\t\t\t\t<ProfileScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/register'>\n\t\t\t\t\t\t<RegisterScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/login' >\n\t\t\t\t\t\t<LoginScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/product/:id' >\n\t\t\t\t\t\t<ProductScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/cart/:id?'>\n\t\t\t\t\t\t<CartScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t<HomeScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</Router>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}